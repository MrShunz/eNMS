- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Start point of a workflow
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-01 01:36:02.097383'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Start'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Iteration Targets: &id008 [-131, -24]
    Advanced Multiprocessing (admin): [-492, -39]
    Ansible with Validation: [-634, -20]
    Basic Iteration Targets with Netmiko: [-308, -231]
    Conditional Skip Query in Failed and Discard Modes: &id011 [-205, -81]
    Credentials (Password & Key, Priority Mechanism): &id014 [-157, 96]
    Data Extraction Service: &id015 [-421, 129]
    Device Iteration: [-310, -113]
    DxD and SxS Run Methods: &id007 [-404, 147]
    Fork based on value with Skip Discard Mechanism: &id012 [-477, 154]
    Generic File Transfer: &id017 [-479, -89]
    Global Variables and post-run Pool Update Mechanism: [-228, 7]
    Global get_credential Function and Log Obfuscation: &id018 [-477, -78]
    'Iteration Mechanism: Combined Device & Target Iteration': [-458, -30]
    'Iteration Mechanism: Device Iteration': [-354, -121]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': &id001 [-308,
      -231]
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [-313, 364]
    Iteration Services Test Workflow: ['-359', '-163']
    Iteration Targets Mechanism: [-400, -61]
    Iteration Targets with a Dictionary: *id001
    Link Neighbors Mechanism (public): [-339, -122]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [-492,
      -39]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [-327, -20]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': [
      -339, -122]
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-383, -95]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [-435,
      -39]
    Multiple parallel connections to same device: &id042 [-339, -168]
    NCClient Netconf Service: &id020 [-448, -185]
    Napalm Getters Validation: &id021 [-604, 9]
    Netmiko File Transfer: &id023 [-380, -131]
    Netmiko Prompts: &id006 [-397, 136]
    Netmiko TextFSM Option: &id024 [-366, 74]
    Notifications: &id025 [-391, -77]
    Operational Data Backup (admin): &id004 [-648, 121]
    Optional Prerequisite Services: &id026 [-356, 121]
    Parameterized Form (override tags & targets, add payload): &id027 [-262, -163]
    Parameterized Superworkflow Run: &id028 [-293, -76]
    Payload Extraction & Validation: [-308, -170]
    Payload Extraction with Operations: &id029 [-661, -226]
    Preprocessing and Postprocessing Mechanism: &id009 [-197, -37]
    RBAC Target Restriction: &id030 [-176, -144]
    'Regression Workflow 1: Netmiko with validation and retries': [-385, 11]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id003 [-383,
      -95]
    'Regression Workflow 1: link neighbors mechanism': &id002 [-273, -126]
    'Regression Workflow 2: Separate Failure - Success paths': &id033 [-327, -20]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id022 [-316, 80]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id002
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id003
    'Regression Workflow 4: link neighbors mechanism': *id002
    'Regression Workflow 4: link neighbors mechanism (public)': *id002
    'Regression Workflow 5: VRF creation and deletion with Napalm': !!python/tuple [
      0, 0]
    'Regression Workflow 6: Ansible with Validation': &id013 [-557, -5]
    'Regression Workflow 7: Payload Extraction & Validation': !!python/tuple [0, 0]
    'Regression Workflow 8: Payload Extraction with Operations': !!python/tuple [
      0, 0]
    'Regression Workflow 9: Operational Data Backup': *id004
    'Regression Workflow 9: Operational Data Backup (admin)': *id004
    'Regression Workflow A: get_var, set_var, get_result': &id040 [-506, -55]
    'Regression Workflow B: Napalm getters validation': !!python/tuple [0, 0]
    'Regression Workflow C: Advanced multiprocessing': &id005 [-492, -39]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id005
    'Regression Workflow D: Prompts': *id006
    'Regression Workflow E: Iteration Targets': &id019 [-342, -252]
    'Regression Workflow F S1: Subworkflow of Workflow': !!python/tuple [0, 0]
    'Regression Workflow F S2: Access Variables from Parent Workflow': !!python/tuple [
      0, 0]
    'Regression Workflow F: Workflow of Workflows': &id041 [-965, 194]
    'Regression Workflow G: run methods (BFS)': *id007
    'Regression Workflow H: shared service in multiple subworkflows': &id034 [55,
      266]
    'Regression Workflow I: Iteration Targets Advanced': *id008
    'Regression Workflow J: Workflow and Subworkflow Iteration': [0, 0]
    'Regression Workflow K: preprocessing and postprocessing': *id009
    'Regression Workflow L: superworkflow': &id037 [-179, 6]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id039 [
      -382, 39]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-341, 17]
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id038 [
      -141, 21]
    'Regression Workflow O: Scrapli': &id032 [-192, 31]
    'Regression Workflow P: large workflow (scalability)': &id031 [-437, -191]
    'Regression Workflow Q: File transfer': &id016 [-479, -89]
    'Regression Workflow R: Skip Services in SxS mode': &id010 [-336, -35]
    'Regression Workflow R: skip services in service by service mode': *id010
    'Regression Workflow S: conditional skip query in failed and discard mode': *id011
    'Regression Workflow S: conditional skip query with skip value set to False': *id011
    'Regression Workflow T: global variables': [-277, -147]
    'Regression Workflow T: global variables and post-run pool update': [-277, -147]
    'Regression Workflow T: link neighbors mechanism': *id002
    'Regression Workflow U: fork based on value with skip discard mode': *id012
    'Regression Workflow V: skip query with device in run once mode': &id035 [-412,
      -72]
    'Regression Workflow V: skip query with device in subworkflow SxS': [-71, -2]
    'Regression Workflow W: disable result creation mode': [-295, -141]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id036 [
      -295, -141]
    'Regression Workflow X: Credentials (password & key, priority)': [-157, 96]
    'Regression Workflow: Advanced Iteration Targets': *id008
    'Regression Workflow: Advanced Multiprocessing (admin)': *id005
    'Regression Workflow: Ansible with Validation': *id013
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id011
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id014
    'Regression Workflow: Data Extraction Service': *id015
    'Regression Workflow: Device Iteration': [-235, -81]
    'Regression Workflow: DxD and SxS Run Methods': *id007
    'Regression Workflow: File Transfer Mechanism': *id016
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id012
    'Regression Workflow: Generic File Transfer': *id017
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      -228, 7]
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id018
    'Regression Workflow: Iteration Targets Mechanism': *id019
    'Regression Workflow: Link Neighbors Mechanism (public)': *id002
    'Regression Workflow: NCClient Netconf Service': *id020
    'Regression Workflow: Napalm Getters Validation': *id021
    'Regression Workflow: Napalm Getters and Postprocessing': *id022
    'Regression Workflow: Netmiko File Transfer': *id023
    'Regression Workflow: Netmiko Prompts': *id006
    'Regression Workflow: Netmiko TextFSM Option': *id024
    'Regression Workflow: Notifications': *id025
    'Regression Workflow: Operational Data Backup (admin)': *id004
    'Regression Workflow: Optional Prerequisite Services': *id026
    'Regression Workflow: Parameterized Form (override tags & targets, add payload)': *id027
    'Regression Workflow: Parameterized Superworkflow Run': *id028
    'Regression Workflow: Payload Extraction & Validation': &id061 [-115, -305]
    'Regression Workflow: Payload Extraction with Operations': *id029
    'Regression Workflow: Preprocessing and Postprocessing': *id009
    'Regression Workflow: RBAC Target Restriction': *id030
    'Regression Workflow: Result content in memory (scalability)': [0, 0]
    'Regression Workflow: Scalability Test (large workflow)': *id031
    'Regression Workflow: Scrapli': *id032
    'Regression Workflow: Scrapli Netconf Service': &id043 [-298, -101]
    'Regression Workflow: Separate Failure - Success Paths': *id033
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id044 [
      -316, 80]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id034
    'Regression Workflow: Skip Query with device in Run Once Mode': *id035
    'Regression Workflow: Skip Services in SxS mode': *id010
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id036
    'Regression Workflow: Specific Superworkflow': *id037
    'Regression Workflow: Superworkflow': *id037
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id045 [
      -197, -103]
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id046 [-436,
      94]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id038
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id039
    'Regression Workflow: Using get_var, set_var, get_result functions': *id040
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id047 [-684, -34]
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id003
    'Regression Workflow: Validation Section Mechanism': [-413, -265]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-313, 364]
    'Regression Workflow: Workflow of Workflows': *id041
    'Regression Workflow: multiple parallel connections to same device': *id042
    'Regression workflow P: large workflow (scalability)': *id031
    Restart Mechanism, payload + results recursive conservation: [-238, -178]
    Scalability Test (large workflow): *id031
    Scrapli Netconf Service: *id043
    Scrapli Service: *id032
    Separate Failure - Success Paths: [-327, -20]
    Service Priorities, Napalm Getters, Postprocessing: *id044
    'Services: Ansible Playbook Service': [-638, 93]
    Shared Service in Multiple Subworkflows: *id034
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [-322, 98]
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [-563, 184]
    'Skip Mechanism: Skip in SxS mode': [-426, -49]
    'Skip Mechanism: Skip in SxS with WF targets mode': [-605, -49]
    Skip Query with device in Run Once Mode: *id035
    Skip Services in SxS mode: [-347, -44]
    Skip, Discard and Disable Result Creation Mechanism: *id036
    Specific Superworkflow: *id037
    Subworkflow 1: !!python/tuple [0, 0]
    Subworkflow 2: !!python/tuple [0, 0]
    Superworkflow in SxS w WT with Run Once service: *id045
    SxS Service Targets with Run Once + Skip: *id046
    Topology Import Service (netbox, librenms, opennms): *id038
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id039
    Using get_var, set_var, and get_result Functions: *id040
    VRF Creation and Deletion with Napalm: *id047
    VRF Creation and Deletion with Netmiko: *id003
    'Validation Mechanism: Section to Validate Property': [-478, -72]
    Validation Section Mechanism: [-540, -145]
    Workflow  in device by device mode: !!python/tuple [0, 0]
    'Workflow Regression R: skip services in service by service mode': *id010
    'Workflow Regression S: conditional skip query with skip value set to False': [
      -183, -152]
    Workflow and Subworkflow Iteration: [-313, 364]
    Workflow in service by service mode (workflow targets): !!python/tuple [0, 0]
    Workflow in service targets mode: !!python/tuple [0, 0]
    Workflow with device and value iteration: [0, 0]
    Workflow with iteration target subworkflows: [-118, 4]
    Workflow with iteration targets: [0, 0]
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id050 [0, 0]
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id051 [
      -2, 14]
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id052 [0, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id059 [
      0, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id060 [
      0, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id053 [
      0, 0]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id047
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow of Workflow': &id049 [
      -418, -147]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S2: Access Variables from Parent Workflow': &id048 [
      -253, -110]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id048
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id049
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id047
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id050
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id051
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id052
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id055 [
      -118, 0]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id056 [
      0, 0]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id053
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id057 [
      -77, -17]
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id054 [
      0, 0]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id054
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id058 [
      0, 0]
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id050
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id051
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id052
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id055
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id056
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id057
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id054
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id058
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id059
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id060
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id053
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id053
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id048
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id049
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id047
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id055
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id056
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id057
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id054
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id058
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id059
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id060
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id053
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id061
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id029
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id021
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id061
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id029
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id021
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id021
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id061
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id029
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id021
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id061
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id029
    iteration_devices_workflow: ['-164', '15']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Start
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: End point of a workflow
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:22.000682'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] End'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Iteration Targets: &id069 [350, -6]
    Advanced Multiprocessing (admin): [505, -10]
    Ansible with Validation: [468, 147]
    Basic Iteration Targets with Netmiko: [596, -221]
    Conditional Skip Query in Failed and Discard Modes: &id072 [640, -155]
    Credentials (Password & Key, Priority Mechanism): &id075 [590, 124]
    Data Extraction Service: &id076 [365, 216]
    Device Iteration: [522, -44]
    DxD and SxS Run Methods: &id068 [638, 130]
    Fork based on value with Skip Discard Mechanism: &id073 [645, 270]
    Generic File Transfer: &id078 [476, 156]
    Global Variables and post-run Pool Update Mechanism: [749, 100]
    Global get_credential Function and Log Obfuscation: &id079 [591, -45]
    'Iteration Mechanism: Combined Device & Target Iteration': [-437, 191]
    'Iteration Mechanism: Device Iteration': [549, -155]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': &id062 [596, -221]
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [627, 254]
    Iteration Services Test Workflow: ['-9', '294']
    Iteration Targets Mechanism: [-370, 210]
    Iteration Targets with a Dictionary: *id062
    Link Neighbors Mechanism (public): [387, -149]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [505, -10]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [553, 357]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': [
      387, -149]
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-383, 167]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [-418,
      177]
    Multiple parallel connections to same device: &id103 [689, 58]
    NCClient Netconf Service: &id081 [556, 119]
    Napalm Getters Validation: &id082 [-600, 63]
    Netmiko File Transfer: &id084 [499, -103]
    Netmiko Prompts: &id067 [608, 90]
    Netmiko TextFSM Option: &id085 [522, 4]
    Notifications: &id086 [530, 32]
    Operational Data Backup (admin): &id065 [290, 314]
    Optional Prerequisite Services: &id087 [734, 171]
    Parameterized Form (override tags & targets, add payload): &id088 [692, -112]
    Parameterized Superworkflow Run: &id089 [565, -70]
    Payload Extraction & Validation: [279, 262]
    Payload Extraction with Operations: &id090 [-688, -153]
    Preprocessing and Postprocessing Mechanism: &id070 [619, 353]
    RBAC Target Restriction: &id091 [654, -133]
    'Regression Workflow 1: Netmiko with validation and retries': [115, 3]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id064 [-383,
      167]
    'Regression Workflow 1: link neighbors mechanism': &id063 [713, 86]
    'Regression Workflow 2: Separate Failure - Success paths': &id094 [737, 276]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id083 [703, 150]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id063
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id064
    'Regression Workflow 4: link neighbors mechanism': *id063
    'Regression Workflow 4: link neighbors mechanism (public)': *id063
    'Regression Workflow 5: VRF creation and deletion with Napalm': !!python/tuple [
      0, 0]
    'Regression Workflow 6: Ansible with Validation': &id074 [567, -24]
    'Regression Workflow 7: Payload Extraction & Validation': !!python/tuple [0, 0]
    'Regression Workflow 8: Payload Extraction with Operations': !!python/tuple [
      0, 0]
    'Regression Workflow 9: Operational Data Backup': *id065
    'Regression Workflow 9: Operational Data Backup (admin)': *id065
    'Regression Workflow A: get_var, set_var, get_result': &id101 [-528, 25]
    'Regression Workflow B: Napalm getters validation': !!python/tuple [0, 0]
    'Regression Workflow C: Advanced multiprocessing': &id066 [505, -10]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id066
    'Regression Workflow D: Prompts': *id067
    'Regression Workflow E: Iteration Targets': &id080 [-334, 29]
    'Regression Workflow F S1: Subworkflow of Workflow': !!python/tuple [0, 0]
    'Regression Workflow F S2: Access Variables from Parent Workflow': !!python/tuple [
      0, 0]
    'Regression Workflow F: Workflow of Workflows': &id102 [-934, 289]
    'Regression Workflow G: run methods (BFS)': *id068
    'Regression Workflow H: shared service in multiple subworkflows': &id095 [688,
      -88]
    'Regression Workflow I: Iteration Targets Advanced': *id069
    'Regression Workflow J: Workflow and Subworkflow Iteration': [500, 0]
    'Regression Workflow K: preprocessing and postprocessing': *id070
    'Regression Workflow L: superworkflow': &id098 [730, 218]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id100 [
      560, 9]
    'Regression Workflow M: Unix command & shell, ping, jump server': [560, 9]
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id099 [
      636, 24]
    'Regression Workflow O: Scrapli': &id093 [628, 113]
    'Regression Workflow P: large workflow (scalability)': &id092 [483, -268]
    'Regression Workflow Q: File transfer': &id077 [576, 135]
    'Regression Workflow R: Skip Services in SxS mode': &id071 [500, 0]
    'Regression Workflow R: skip services in service by service mode': *id071
    'Regression Workflow S: conditional skip query in failed and discard mode': *id072
    'Regression Workflow S: conditional skip query with skip value set to False': *id072
    'Regression Workflow T: global variables': [569, -66]
    'Regression Workflow T: global variables and post-run pool update': [569, -66]
    'Regression Workflow T: link neighbors mechanism': *id063
    'Regression Workflow U: fork based on value with skip discard mode': *id073
    'Regression Workflow V: skip query with device in run once mode': &id096 [670,
      159]
    'Regression Workflow V: skip query with device in subworkflow SxS': [572, -3]
    'Regression Workflow W: disable result creation mode': [529, -52]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id097 [
      547, -96]
    'Regression Workflow X: Credentials (password & key, priority)': [590, 124]
    'Regression Workflow: Advanced Iteration Targets': *id069
    'Regression Workflow: Advanced Multiprocessing (admin)': *id066
    'Regression Workflow: Ansible with Validation': *id074
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id072
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id075
    'Regression Workflow: Data Extraction Service': *id076
    'Regression Workflow: Device Iteration': [699, 125]
    'Regression Workflow: DxD and SxS Run Methods': *id068
    'Regression Workflow: File Transfer Mechanism': *id077
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id073
    'Regression Workflow: Generic File Transfer': *id078
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      749, 100]
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id079
    'Regression Workflow: Iteration Targets Mechanism': *id080
    'Regression Workflow: Link Neighbors Mechanism (public)': *id063
    'Regression Workflow: NCClient Netconf Service': *id081
    'Regression Workflow: Napalm Getters Validation': *id082
    'Regression Workflow: Napalm Getters and Postprocessing': *id083
    'Regression Workflow: Netmiko File Transfer': *id084
    'Regression Workflow: Netmiko Prompts': *id067
    'Regression Workflow: Netmiko TextFSM Option': *id085
    'Regression Workflow: Notifications': *id086
    'Regression Workflow: Operational Data Backup (admin)': *id065
    'Regression Workflow: Optional Prerequisite Services': *id087
    'Regression Workflow: Parameterized Form (override tags & targets, add payload)': *id088
    'Regression Workflow: Parameterized Superworkflow Run': *id089
    'Regression Workflow: Payload Extraction & Validation': &id123 [279, 262]
    'Regression Workflow: Payload Extraction with Operations': *id090
    'Regression Workflow: Preprocessing and Postprocessing': *id070
    'Regression Workflow: RBAC Target Restriction': *id091
    'Regression Workflow: Scalability Test (large workflow)': *id092
    'Regression Workflow: Scrapli': *id093
    'Regression Workflow: Scrapli Netconf Service': &id104 [-293, 114]
    'Regression Workflow: Separate Failure - Success Paths': *id094
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id105 [
      703, 150]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id095
    'Regression Workflow: Skip Query with device in Run Once Mode': *id096
    'Regression Workflow: Skip Services in SxS mode': *id071
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id097
    'Regression Workflow: Specific Superworkflow': *id098
    'Regression Workflow: Superworkflow': *id098
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id106 [
      514, -109]
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id107 [605,
      380]
    'Regression Workflow: SxS Service Targets with Skip Global + Query': !!python/tuple [
      500, 0]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id099
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id100
    'Regression Workflow: Using get_var, set_var, get_result functions': *id101
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id108 [-696, 47]
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id064
    'Regression Workflow: Validation Section Mechanism': [392, 138]
    'Regression Workflow: Workflow and Subworkflow Iteration': [644, 233]
    'Regression Workflow: Workflow of Workflows': *id102
    'Regression Workflow: multiple parallel connections to same device': *id103
    'Regression workflow P: large workflow (scalability)': *id092
    Restart Mechanism, payload + results recursive conservation: [663, 12]
    Scalability Test (large workflow): *id092
    Scrapli Netconf Service: *id104
    Scrapli Service: *id093
    Separate Failure - Success Paths: [737, 276]
    Service Priorities, Napalm Getters, Postprocessing: *id105
    'Services: Ansible Playbook Service': [512, 246]
    Shared Service in Multiple Subworkflows: *id095
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [599, 331]
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [388, 363]
    'Skip Mechanism: Skip in SxS mode': [407, -39]
    'Skip Mechanism: Skip in SxS with WF targets mode': [210, -67]
    Skip Query with device in Run Once Mode: *id096
    Skip Services in SxS mode: [387, -76]
    Skip, Discard and Disable Result Creation Mechanism: *id097
    Specific Superworkflow: *id098
    Subworkflow 1: !!python/tuple [0, 0]
    Subworkflow 2: !!python/tuple [0, 0]
    Superworkflow in SxS w WT with Run Once service: *id106
    SxS Service Targets with Run Once + Skip: *id107
    T: !!python/tuple [500, 0]
    TEST: !!python/tuple [500, 0]
    TEST2: !!python/tuple [500, 0]
    Topology Import Service (netbox, librenms, opennms): *id099
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id100
    Using get_var, set_var, and get_result Functions: *id101
    VRF Creation and Deletion with Napalm: *id108
    VRF Creation and Deletion with Netmiko: *id064
    'Validation Mechanism: Section to Validate Property': [310, -55]
    Validation Section Mechanism: [470, 106]
    Workflow  in device by device mode: !!python/tuple [0, 0]
    'Workflow Regression R: skip services in service by service mode': *id071
    'Workflow Regression S: conditional skip query with skip value set to False': [
      640, -155]
    Workflow and Subworkflow Iteration: [644, 233]
    Workflow in service by service mode (workflow targets): !!python/tuple [0, 0]
    Workflow in service targets mode: !!python/tuple [0, 0]
    Workflow with device and value iteration: [500, 0]
    Workflow with iteration target subworkflows: [617, 0]
    Workflow with iteration targets: [500, 0]
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id111 [500, 0]
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id112 [
      500, 0]
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id113 [500, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id121 [
      500, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id122 [
      500, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id114 [
      500, 0]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id108
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow of Workflow': &id110 [
      -447, 191]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S2: Access Variables from Parent Workflow': &id109 [
      -274, 112]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id109
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id110
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id108
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id111
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id112
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id113
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id116 [
      610, 4]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id117 [
      500, 0]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id114
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode': !!python/tuple [
      500, 0]
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - service targets': &id118 !!python/tuple [
      500, 0]
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id119 [
      521, -13]
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id115 [
      500, 0]
    '[Regression Workflow W: disable result creation mode] Workflow in SxS mode': !!python/tuple [
      500, 0]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id115
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id120 [
      500, 0]
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id111
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id112
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id113
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id116
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id117
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service targets': *id118
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id119
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id115
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id120
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id121
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id122
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id114
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id114
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id109
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id110
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id108
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id116
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id117
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service targets': *id118
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id119
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id115
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id120
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id121
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id122
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id114
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id123
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id090
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id082
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id123
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id090
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id082
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id082
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id123
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id090
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id082
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id123
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id090
    iteration_devices_workflow: ['651', '20']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: End
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Monitor eNMS cluster
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.461232'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: cluster_monitoring
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: cluster_monitoring
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- a_dict: {}
  a_float: 5.0
  a_list: []
  access_groups: ''
  an_integer: 10
  boolean1: true
  boolean2: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_integer: 0
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Example
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  exclusion_field: d
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  ip_address: 10.1.1.1
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:16:48.005751'
  log_level: 1
  mac_address: FF:FF:FF:FF:FF:FF
  mail_address: aaa@gmail.com
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Example Service (does nothing)'
  negative_logic: false
  notification_header: ''
  number_in_range: 7
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Multiprocessing (admin): [-266, -204]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [-281,
      -196]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [696, 185]
    'Regression Workflow 2: Separate Failure - Success paths': &id125 [741, 106]
    'Regression Workflow C: Advanced multiprocessing': &id124 [-266, -204]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id124
    'Regression Workflow: Advanced Multiprocessing (admin)': *id124
    'Regression Workflow: Separate Failure - Success Paths': *id125
    Separate Failure - Success Paths: [741, 106]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  regex: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Example Service (does nothing)
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  string1: cisco
  string2: s2
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: example_service
  update_pools_after_running: false
  update_target_pools: false
  url: https://www.google.fr/
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Configure BGP Peering with Napalm
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-13 20:54:58.539660'
  local_as: 100
  log_level: 1
  loopback: Lo100
  loopback_ip: 100.1.1.1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism] napalm_configure_bgp_1'
  negative_logic: false
  neighbor_ip: 100.1.2.1
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Multiprocessing (admin): [299, -170]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [307, -157]
    'Regression Workflow C: Advanced multiprocessing': &id126 [299, -170]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id126
    'Regression Workflow: Advanced Multiprocessing (admin)': *id126
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  remote_as: 200
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: napalm_configure_bgp_1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {Advanced Multiprocessing (admin): true, 'Regression Workflow C: Advanced multiprocessing': true}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: configure_bgp_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  vrf_name: configure_BGP_test
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Configuration Backup using NAPALM
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  getters: [get_arp_table, get_interfaces]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-31 03:59:15.060637'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Operational Data Backup (admin)] Configuration Backup (NAPALM)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Operational Data Backup (admin): &id127 [-259, 351]
    'Regression Workflow 9: Operational Data Backup': *id127
    'Regression Workflow 9: Operational Data Backup (admin)': *id127
    'Regression Workflow: Operational Data Backup (admin)': *id127
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  property: operational_data
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Configuration Backup (NAPALM)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow 9: Operational Data Backup': true, 'Regression Workflow: Operational Data Backup (admin)': true}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_backup_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  commit_configuration: false
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content: vrf instance test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Netmiko
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-04 11:01:33.553474'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: Netmiko Services, Connection Cache, Targets Definition] netmiko_create_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-38, -86]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [-115,
      -70]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id128 [-38,
      -86]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id128
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id128
    VRF Creation and Deletion with Netmiko: *id128
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_create_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: false
  strip_prompt: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: true
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: test
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is configured
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-10-10 09:46:36.865576'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: Netmiko Services, Connection Cache, Targets Definition] netmiko_check_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Iteration Services Test Workflow: ['147', '-14']
    'Miscellaneous: Netmiko Services, Connection Cache Management': [445, -37]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [352,
      7]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id129 [445,
      -37]
    'Regression Workflow 2: Separate Failure - Success paths': ['84', '-3']
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id129
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '-50']
    'Regression Workflow A: get_var, set_var, get_result': ['355', '-25']
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id129
    VRF Creation and Deletion with Netmiko: *id129
    iteration_devices_workflow: ['414', '-154']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_check_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  close_connection: false
  commit_configuration: false
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content: no vrf instance test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Delete VRF "test"
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:18.423301'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: Netmiko Services, Connection Cache, Targets Definition] netmiko_delete_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Miscellaneous: Netmiko Services, Connection Cache Management': [476, 119]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [347,
      119]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id130 [476,
      119]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id130
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '50']
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id130
    VRF Creation and Deletion with Netmiko: *id130
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_delete_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: false
  strip_prompt: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 1
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: test
  content_match_regex: true
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is NOT configured
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-29 06:44:11.874459'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Netmiko: Check VRF (test) does not exist'
  negative_logic: true
  notification_header: ''
  number_of_retries: 2
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [-179, 259]
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-10, 157]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': [-84,
      184]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id131 [-10,
      157]
    'Regression Workflow 2: Separate Failure - Success paths': &id132 [-194, 225]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id131
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '150']
    'Regression Workflow: Separate Failure - Success Paths': *id132
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id131
    Separate Failure - Success Paths: [-179, 259]
    VRF Creation and Deletion with Netmiko: *id131
    iteration_devices_workflow: ['337', '-145']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Netmiko: Check VRF (test) does not exist'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: true
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington, Philadelphia]
  target_pools: []
  time_between_retries: 1
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-28 10:36:02.393623'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Shared] REST API: call *is_alive* endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    Advanced Multiprocessing (admin): [386, 124]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [380, 142]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [339, 297]
    Netmiko Prompts: &id134 [405, -103]
    'Regression Workflow 2: Separate Failure - Success paths': &id136 [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': &id138 [-10, 157]
    'Regression Workflow C: Advanced multiprocessing': &id133 [386, 124]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id133
    'Regression Workflow D: Prompts': *id134
    'Regression Workflow L: superworkflow': &id137 [162, -126]
    'Regression Workflow P: large workflow (scalability)': &id135 [-415, -115]
    'Regression Workflow: Advanced Multiprocessing (admin)': *id133
    'Regression Workflow: Netmiko Prompts': *id134
    'Regression Workflow: Scalability Test (large workflow)': *id135
    'Regression Workflow: Separate Failure - Success Paths': *id136
    'Regression Workflow: Specific Superworkflow': *id137
    'Regression Workflow: Superworkflow': *id137
    'Regression Workflow: Using get_var, set_var, get_result functions': *id138
    'Regression workflow P: large workflow (scalability)': *id135
    Scalability Test (large workflow): *id135
    Separate Failure - Success Paths: [374, 278]
    Specific Superworkflow: *id137
    Using get_var, set_var, and get_result Functions: *id138
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Columbus]
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_facts'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 12:58:14.647164'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] NAPALM: Get Facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [-31, -43]
    'Regression Workflow 2: Separate Failure - Success paths': &id140 [-102, -130]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id139 [-154, -70]
    'Regression Workflow A: get_var, set_var, get_result': ['39', '-32']
    'Regression Workflow F: Workflow of Workflows': [3, -51]
    'Regression Workflow: Napalm Getters and Postprocessing': *id139
    'Regression Workflow: Separate Failure - Success Paths': *id140
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id141 [
      -154, -70]
    Separate Failure - Success Paths: [-37, -67]
    Service Priorities, Napalm Getters, Postprocessing: *id141
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 2
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'NAPALM: Get Facts'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_interfaces'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  getters: [get_interfaces]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 13:27:53.699477'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] NAPALM: Get interfaces'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Miscellaneous: Fork based on Result with Success & Failure Edges': [608, 46]
    'Regression Workflow 2: Separate Failure - Success paths': &id143 [611, -72]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id142 [-166, 303]
    'Regression Workflow F: Workflow of Workflows': &id144 [-336, 217]
    'Regression Workflow: Napalm Getters and Postprocessing': *id142
    'Regression Workflow: Separate Failure - Success Paths': *id143
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id145 [
      -183, 311]
    'Regression Workflow: Workflow of Workflows': *id144
    Separate Failure - Success Paths: [611, -72]
    Service Priorities, Napalm Getters, Postprocessing: *id145
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 2
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'NAPALM: Get interfaces'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_interfaces_ip'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  getters: [get_interfaces_ip]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 12:58:18.420473'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Service Priorities, Napalm Getters, Postprocessing] get_interfaces_ip'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': &id146 [303, 43]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
    'Regression Workflow: Napalm Getters and Postprocessing': *id146
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id147 [
      303, 43]
    Service Priorities, Napalm Getters, Postprocessing: *id147
  postprocessing: "# Will change the IPv6 of the Management Interface to ::1\r\nip_address\
    \ = get_var(\"value that does not exist\", default=\"::1\")\r\nresults[\"result\"\
    ][\"get_interfaces_ip\"][\"Management1\"][\"ipv6\"] = ip_address"
  postprocessing_mode: always
  preprocessing: ''
  priority: 2
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: get_interfaces_ip
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_config'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  getters: [get_config]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 12:58:22.599189'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Service Priorities, Napalm Getters, Postprocessing] get_config'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': &id148 [652, -22]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
    'Regression Workflow: Napalm Getters and Postprocessing': *id148
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id149 [
      652, -22]
    Service Priorities, Napalm Getters, Postprocessing: *id149
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 2
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: get_config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Process Payload in example workflow
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 14:38:04.818329'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Service Priorities, Napalm Getters, Postprocessing] process_payload1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': &id150 [424, 229]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
    'Regression Workflow: Napalm Getters and Postprocessing': *id150
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id151 [
      424, 229]
    Service Priorities, Napalm Getters, Postprocessing: *id151
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: process_payload1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Add devices to the payload
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-09 12:30:00.373117'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Modify Payload for Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Combined Device & Target Iteration': [-201, -15]
    Iteration Services Test Workflow: ['3', '-144']
    Iteration Targets Mechanism: [-171, -53]
    'Regression Workflow E: Iteration Targets': &id152 [-195, -168]
    'Regression Workflow F: Workflow of Workflows': &id153 [-790, 110]
    'Regression Workflow: Iteration Targets Mechanism': *id152
    'Regression Workflow: Workflow of Workflows': *id153
    Workflow with iteration target subworkflows: [283, -152]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Modify Payload for Iteration
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Interfaces 1\r\ntargets = ['Loopback101', 'Loopback15'] if device.name\
    \ == \"Washington\" else ['Loopback9', 'Loopback1000']\r\nset_var('Interfaces\
    \ 1', targets, device=device.name)\r\n\r\n# Derived Devices\r\nset_var(\"Derived\
    \ Devices\", [\"Atlanta\", \"Austin\"] if device.name == \"Austin\" else [\"Washington\"\
    ], device=device.name)\r\n\r\n# Interfaces 2\r\nset_var('Interfaces 2', ['Loopback333',\
    \ 'Loopback334'])\r\nsave_result(True, {})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  command: show vrf a
  completion_time: 1
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: bipbipbop
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-09-18 18:31:59.605812'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 2
  multiprocessing: false
  name: '[Netmiko Prompts] Test Netmiko Prompt Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko Prompts: &id154 [22, -74]
    'Regression Workflow D: Prompts': *id154
    'Regression Workflow: Netmiko Prompts': *id154
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  response1: show vrf b
  response2: show vrf c
  response3: ''
  run_method: per_device
  scoped_name: Test Netmiko Prompt Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-07-19 15:41:59.683776'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko Prompts] Test netmiko prompts pass'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko Prompts: &id155 [350, 108]
    'Regression Workflow D: Prompts': *id155
    'Regression Workflow: Netmiko Prompts': *id155
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  response1: show vrf
  response2: ''
  response3: ''
  run_method: per_device
  scoped_name: Test netmiko prompts pass
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-26 06:48:21.758699'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Using get_var, set_var, and get_result Functions] Modify payload (no device)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': &id156 [-376, -138]
    'Regression Workflow: Using get_var, set_var, get_result functions': *id156
    Using get_var, set_var, and get_result Functions: *id156
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Modify payload (no device)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"global_variable\", value=1050)\r\nset_var(\"variable\",\
    \ \"variable_in_variables\")\r\nsave_result(success=True, result={})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-29 06:50:07.334676'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Using get_var, set_var, and get_result Functions] Modify payload (per device)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': &id157 [0, -144]
    'Regression Workflow: Using get_var, set_var, get_result functions': *id157
    Using get_var, set_var, and get_result Functions: *id157
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Modify payload (per device)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"variable1\", 999, device=device.name)\r\nset_var(\"variable2\"\
    , \"1000\", device=device.name, section=\"variables\")\r\nset_var(\"iteration_simple\"\
    , \"192.168.56.50\")\r\ndevices = [\"Boston\", \"Cincinnati\"] if device.name\
    \ == \"Chicago\" else [\"Cleveland\", \"Washington\"]\r\nset_var(\"iteration_device\"\
    , devices, device=device.name)\r\nsave_result(success=True, result={})"
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf {{iteration_simple}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("iteration_device", device=parent_device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-26 06:48:40.762497'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Using get_var, set_var, and get_result Functions] Show vrf with payload
    helper'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': &id158 [474, -11]
    'Regression Workflow: Using get_var, set_var, get_result functions': *id158
    Using get_var, set_var, and get_result Functions: *id158
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with payload helper
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 1.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf test
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '[get_var("iteration_simple")]'
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-26 06:50:26.306070'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Using get_var, set_var, and get_result Functions] Show vrf with python query'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': &id159 [425, 190]
    'Regression Workflow: Using get_var, set_var, get_result functions': *id159
    Using get_var, set_var, and get_result Functions: *id159
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with python query
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf {{get_result("Modify payload (per device)", device=device.name)["duration"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-29 06:56:23.711236'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Using get_var, set_var, and get_result Functions] show runtime with get_result
    helper'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': &id160 [-445, 128]
    'Regression Workflow: Using get_var, set_var, get_result functions': *id160
    Using get_var, set_var, and get_result Functions: *id160
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: show runtime with get_result helper
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match:
    '{{device.ip_address}}': {prefix_length: 24}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  getters: [get_interfaces_ip]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-08 21:45:40.369909'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Getters Workflow: Interface IP'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Napalm Getters Validation: &id161 [581, 136]
    Payload Extraction with Operations: &id162 [-348, -240]
    'Regression Workflow: Napalm Getters Validation': *id161
    'Regression Workflow: Payload Extraction with Operations': *id162
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id162
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id161
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id162
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id161
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id161
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id162
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id161
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id162
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: Interface IP'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: device
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {host: '{{device.ip_address}}', unreachable: 0, use_ssl: true}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-27 05:38:03.655550'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 2
  multiprocessing: false
  name: '[Services: Ansible Playbook Service] Ansible Workflow: Arista show version'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_version.yml
  pools: ['All devices, links, services and users']
  positions:
    Ansible with Validation: [-116, 248]
    'Regression Workflow 6: Ansible with Validation': &id163 [-107, 153]
    'Regression Workflow B: Napalm getters validation': [-30, 126]
    'Regression Workflow: Ansible with Validation': *id163
    'Services: Ansible Playbook Service': [-305, 177]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show version'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  arguments: ''
  completion_time: 1
  content_match: ip address\s.*/24
  content_match_regex: true
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-27 05:41:57.831683'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Services: Ansible Playbook Service] Ansible Workflow: Arista show configuration
    (regex match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_running_config.yml
  pools: ['All devices, links, services and users']
  positions:
    Ansible with Validation: [370, 229]
    'Regression Workflow 6: Ansible with Validation': &id164 [179, -62]
    'Regression Workflow: Ansible with Validation': *id164
    'Services: Ansible Playbook Service': [267, 283]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show configuration (regex match)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: device
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {action: debug, changed: false, failed: false}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-27 05:38:15.786745'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Services: Ansible Playbook Service] Ansible Workflow: Arista show configuration
    (dict match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_running_config.yml
  pools: ['All devices, links, services and users']
  positions:
    Ansible with Validation: [348, 36]
    'Regression Workflow 6: Ansible with Validation': &id165 [486, 173]
    'Regression Workflow: Ansible with Validation': *id165
    'Services: Ansible Playbook Service': [211, 148]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show configuration (dict match)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show version
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-08-13 20:58:22.190268'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 10
  maximum_runs: 1
  multiprocessing: true
  name: '[Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism] Show
    version with multiprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Multiprocessing (admin): [-315, 157]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [-329,
      156]
    'Regression Workflow C: Advanced multiprocessing': &id166 [-315, 157]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id166
    'Regression Workflow F: Workflow of Workflows': [678, 52]
    'Regression Workflow: Advanced Multiprocessing (admin)': *id166
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show version with multiprocessing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show interface {{non_default_iteration_value_name}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=device.name)
  iteration_devices_property: name
  iteration_values: '["Loopback11","Loopback15"]'
  iteration_variable_name: non_default_iteration_value_name
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:08.658446'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Combined Device & Target Iteration] Iteration Targets
    Workflow - Test 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Combined Device & Target Iteration': [214, 72]
    Iteration Targets Mechanism: [198, -59]
    'Regression Workflow E: Iteration Targets': &id167 [240, -144]
    'Regression Workflow: Iteration Targets Mechanism': *id167
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Targets Workflow - Test 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show interface {{iteration_value}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: get_var('Interfaces 1', device=device.name)
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:45.112707'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Combined Device & Target Iteration] Iteration Target
    Workflow - Test 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Combined Device & Target Iteration': [633, 36]
    Iteration Targets Mechanism: [572, -4]
    'Regression Workflow E: Iteration Targets': &id168 [572, -4]
    'Regression Workflow: Iteration Targets Mechanism': *id168
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Target Workflow - Test 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show interface {{iteration_value}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=parent_device.name)
  iteration_devices_property: name
  iteration_values: get_var('Interfaces 2')
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:56.019693'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Combined Device & Target Iteration] Iteration Target
    Workflow - Test 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Combined Device & Target Iteration': [468, 196]
    Iteration Targets Mechanism: [647, 164]
    'Regression Workflow E: Iteration Targets': &id169 [556, 123]
    'Regression Workflow: Iteration Targets Mechanism': *id169
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Target Workflow - Test 3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '["Washington", "Atlanta"]'
  iteration_variable_name: iteration_value
  last_modified: '2021-08-21 12:59:02.930936'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Combined Device & Target Iteration] Iteration Targets
    Workflow - Test 4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  password: YWRtaW4=
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Combined Device & Target Iteration': [-120, 211]
    Iteration Targets Mechanism: [36, 183]
    'Regression Workflow E: Iteration Targets': &id170 [-135, 91]
    'Regression Workflow: Iteration Targets Mechanism': *id170
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/instance/device/{{iteration_value}}
  run_method: per_device
  scoped_name: Iteration Targets Workflow - Test 4
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: admin
  definition: Definition
  delete_spaces_before_matching: false
  description: Poll configuration and push to gitlab
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3b9c0900-5718-4298-afcc-67bb0a7fb3af:
      content: "This workflow calls netmiko and napalm backup services.\r\nThe devices\
        \ must be defined in the service, not in the workflow."
      positions: [-280, 128]
  last_modified: '2021-09-22 06:19:08.468434'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Operational Data Backup (admin)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [200, -205]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Operational Data Backup (admin)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Operational Data Backup (admin)]
      Configuration Backup (NAPALM)', '[Operational Data Backup (admin)] Retrieve
      Operational Data', '[Operational Data Backup (admin)] Get Configuration', '[Operational
      Data Backup (admin)] Push Configurations to Git']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: true
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: is_alive
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Netmiko
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    6a9299b5-7ec9-40e8-955d-408344e7ea2e:
      alignment: left
      content: "This service is configured with \"Close connection\".\r\nIt should\
        \ use the same connection as in the previous service, then close it.\r\nExpected\
        \ logs:\r\n- netmiko_check_vrf_test - DEVICE Washington : Using cached Netmiko\
        \ connection\r\n- netmiko_check_vrf_test - DEVICE Washington : Closed netmiko\
        \ connection\r\n"
      positions: [525, -84]
    735baaec-e1f2-4b17-b402-11d8ae7a0d75:
      alignment: left
      content: "This workflow tests:\r\n- the targets defined as a combination of\
        \ devices and pools.\r\nIt runs on two devices, the pool \"Washington\" and\
        \ the device \"Austin\".\r\n- The netmiko Validation and Configuration services.\
        \ It creates and\r\ndeletes a VRF on the router with Netmiko.\r\n- The connection\
        \ cache management: closing cached connection,\r\nopening new connection,\
        \ reusing cached connection.\r\nAt the end of the workflow, the cache connection\
        \ should be closed.\r\nExpected log:\r\n- Regression Workflow 4: VRF creation\
        \ and deletion with Netmiko -\r\nDEVICE Washington : Closed netmiko connection"
      positions: [-96, 61]
    a7458a18-4812-498e-857d-b885237a6525:
      alignment: left
      content: "This service is configured with \"Start New Connection\".\r\nIt should\
        \ close the connection opened at the previous service,\r\nand start a new\
        \ one.\r\nExpected Log:\r\n- Netmiko: Check VRF (test) does not exist - DEVICE\
        \ Washington : Closed netmiko connection\r\n- Netmiko: Check VRF (test) does\
        \ not exist - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [-82, 299]
    b5dc9b96-d0bf-4092-8e60-b82ca6db2ad6:
      alignment: left
      content: "This service should automatically detect that there is no\r\nlonger\
        \ a cached connection, and recreate a new one.\r\nExpected log:\r\nnetmiko_delete_vrf_test\
        \ - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [529, 207]
  last_modified: '2021-09-22 06:19:08.513951'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: 'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow F: Workflow of Workflows': [-423, -31]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Miscellaneous: Netmiko Services,
      Connection Cache, Targets Definition] netmiko_create_vrf_test', '[Miscellaneous:
      Netmiko Services, Connection Cache, Targets Definition] netmiko_check_vrf_test',
    '[Miscellaneous: Netmiko Services, Connection Cache, Targets Definition] netmiko_delete_vrf_test',
    '[Shared] Netmiko: Check VRF (test) does not exist']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Specific Superworkflow
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: REST call, Napalm getters, etc
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    41d9aca9-265a-428c-af8f-da83d682b1f7:
      alignment: center
      content: "In get_interfaces_ip, we test the python post-processing of\r\nthe\
        \ results by setting the IPv6 address of the Mgmt1 interface\r\nto \"::1\"\
        .\r\nThe value \"::1\" comes from get_var trying to retrieve a value\r\nthat\
        \ does not exist in the payload via the \"default\" keyword."
      positions: [297, -83]
    fa4bd6ec-c736-4b7e-afb0-f4a79b477033:
      alignment: left
      content: "Process payload is a Swiss Army Knife service that uses the results\
        \ of both get_facts\r\nand get_interfaces to compute its success value.\r\n\
        All services in the upper path are set to a priority of 2 to ensure that they\
        \ run first,\r\nbecause the process_payload service will use their results\
        \ via \"get_result\"."
      positions: [421, 330]
  last_modified: '2021-09-22 06:19:08.577761'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Service Priorities, Napalm Getters, Postprocessing
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow F: Workflow of Workflows': [464, 224]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service Priorities, Napalm Getters, Postprocessing
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] NAPALM: Get Facts', '[Shared]
      NAPALM: Get interfaces', '[Service Priorities, Napalm Getters, Postprocessing]
      get_interfaces_ip', '[Service Priorities, Napalm Getters, Postprocessing] get_config',
    '[Service Priorities, Napalm Getters, Postprocessing] process_payload1']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Atlanta]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Workflow with separate failure - success path
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    1d6eb567-a377-4442-a3e6-fad7e792c516:
      alignment: left
      content: Run "show vrf" with Netmiko
      positions: [-187, 318]
    63bebf9d-b5d5-47fd-9849-4177f2517be4:
      alignment: left
      content: "This workflow must be run with the router up and running.\r\nIt runs\
        \ on 3 devices: Washington (active router) and 2 dummy devices.\r\nThe first\
        \ service is a netmiko validation service running \"show vrf\": it\r\nshould\
        \ pass for Washington and fail for the others.\r\nAs a result, Washington\
        \ will take the upward path, and the others\r\nwill take the downward path.\r\
        \nBoth path rejoin at the end.\r\nTo be tested both with and without multiprocessing."
      positions: [194, 131]
    abc34c52-1c3e-4f1b-964b-8a1ee0b3a35a:
      alignment: left
      content: 'Expected: 3 devices'
      positions: [696, 308]
    b8cb58d2-b2ee-4816-8b34-23191c4604d8:
      alignment: left
      content: 'Expected: 1 device'
      positions: [-169, 49]
    c42ee848-1630-4a36-9b3c-0ff3e88e449c:
      alignment: left
      content: "Retrieving interfaces data with Napalm.\r\nShould pass for Washington,\
        \ fail for the others.\r\nExpected: Washington exiting via the success edge,\r\
        \n2 others via the failure edge.\r\n"
      positions: [676, -34]
    ef63ac32-ca44-4045-a511-d1271a8646a6:
      alignment: left
      content: 'Expected: 2 devices'
      positions: [113, 266]
  last_modified: '2021-09-22 06:19:08.631150'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: 'Miscellaneous: Fork based on Result with Success & Failure Edges'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Miscellaneous: Fork based on Result with Success & Failure Edges'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] NAPALM: Get Facts', '[Shared]
      REST API: call *is_alive* endpoint', '[Shared] Netmiko: Check VRF (test) does
      not exist', '[Shared] Example Service (does nothing)', '[Shared] NAPALM: Get
      interfaces']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    4b2ac5bb-900e-40b2-952b-30614cf6e22a:
      alignment: left
      content: "Use Netmiko to run a \"show vrf\".\r\nUse the validation mechanism\
        \ to check for the string \"NOVRF\".\r\nThere is no such VRF configured so\
        \ the service is expected to fail.\r\nRetry twice with 2 seconds between retries."
      positions: [-243, -179]
    ce7e6857-714e-4102-a65b-ec2d67414866:
      content: "Test of the maximum number of run of a service in a workflow.\r\n\
        For Test Netmiko Prompt Service, it is set to 2: it should run\r\nonce more\
        \ after the REST service.\r\n"
      positions: [288, -203]
  last_modified: '2021-09-22 06:19:08.681480'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Netmiko Prompts
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Netmiko Prompts
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Netmiko Prompts] Test Netmiko Prompt
      Service', '[Netmiko Prompts] Test netmiko prompts pass', '[Shared] REST API:
      call *is_alive* endpoint', '[Netmiko Prompts] Check VRF (NOVRF) exists']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    6c961848-4911-4983-aaf9-d8e2dcb69bca:
      alignment: left
      content: "Set a variable called \"iteration_device\" that we will use in the\
        \ following service\r\nto define iteration devices.\r\ndevices = [\"Boston\"\
        , \"Cincinnati\"] if device.name == \"Chicago\" else [\"Cleveland\", \"Washington\"\
        ]\r\nset_var(\"iteration_device\", devices, section=\"pools\", device=device.name)."
      positions: ['103', '-224']
    8d64652f-dbc6-4916-ba06-a49ae0ed36fb:
      alignment: left
      content: "Will run on 4 \"iterated devices\" in total.\r\nTests that \"parent_device\"\
        \ and \"device\"\r\ncan both be used from the \"Service\" tab.\r\nTests sending\
        \ multiple commands with a Netmiko service."
      positions: [568, -123]
    afb8aaab-be91-4d46-8de9-9f7803682323:
      alignment: left
      content: "This service is configured to run SERVICE BY SERVICE.\r\nThe first\
        \ service is set to \"Run once\": it must run only once for both devices.\r\
        \nThis workflow uses \"set_var\" to modify the payload, and get_var to\r\n\
        retrieve a variable.\r\nIt also uses \"get_result\" to retrieve the result\
        \ of a previously run job."
      positions: [-92, -34]
  last_modified: '2021-09-22 06:19:08.734930'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Using get_var, set_var, and get_result Functions
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Using get_var, set_var, and get_result Functions
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Using get_var, set_var, and get_result
      Functions] Modify payload (no device)', '[Using get_var, set_var, and get_result
      Functions] Modify payload (per device)', '[Using get_var, set_var, and get_result
      Functions] Show vrf with payload helper', '[Using get_var, set_var, and get_result
      Functions] Show vrf with python query', '[Shared] REST API: call *is_alive*
      endpoint', '[Using get_var, set_var, and get_result Functions] show runtime
      with get_result helper']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    1dff7d24-0b6b-4524-a07a-26ac67e1ae2c:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\":\r\n  tasks:\r\n    -\
        \ name: eos show commands\r\n      eos_command:\r\n        commands:\r\n \
        \         - show running-config\r\n        provider: \"{{ cli }}\"\r\n   \
        \   register: output\r\nConvert the result to text and check that the result\
        \ matches\r\nthe following regular expression: \"ip address\\s.*/32\""
      positions: [270, 416]
    36072c59-543f-4600-b2be-f88c366ccb79:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\".\r\nConvert the result\
        \ to a dictionary and check that it\r\ncontains the following dictionary:\r\
        \n{\"action\":\"debug\",\"changed\":false,\"failed\":false}"
      positions: [293, 77]
    813cd109-d252-4731-99b8-7a0828883b6d:
      alignment: left
      content: "Uses Ansible to do a \"show version\":\r\n  tasks:\r\n    - name:\
        \ eos show commands\r\n      eos_command:\r\n        commands:\r\n       \
        \   - show version\r\n        provider: \"{{ cli }}\"\r\n      register: output\r\
        \nConvert the result to a dictionary (JSON conversion).\r\nCheck that the\
        \ results contains the following dictionary (dict inclusion):\r\n{\"host\"\
        :\"{{device.ip_address}}\",\"unreachable\":0,\"use_ssl\":true}\r\n"
      positions: [-201, 324]
    af753a72-ccd8-43fd-87c2-fde82348f798:
      alignment: left
      content: "Runs \"simple_playbook.yml\":\r\n---\r\n- hosts: all\r\n  name: Simple\
        \ playbook\r\n  gather_facts: false\r\n  connection: local\r\n"
      positions: [-626, 386]
    cb3b0740-411a-4138-a54d-31a133413526:
      alignment: left
      content: "This workflow :\r\n- uses the Ansible Playbook Service to run playbooks\r\
        \n- uses the conversion mechanism to turn the output into a dictionary (JSON\
        \ conversion)\r\n- uses the \"Text with regular expression\" and \"dictionary\
        \ inclusion\" mechanisms to validate the result."
      positions: [-240, 69]
  last_modified: '2021-09-22 06:19:08.781592'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Services: Ansible Playbook Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Services: Ansible Playbook Service'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Services: Ansible Playbook Service]
      Ansible Workflow: Arista show version', '[Services: Ansible Playbook Service]
      Ansible Workflow: Arista show configuration (regex match)', '[Services: Ansible
      Playbook Service] Ansible Workflow: Arista show configuration (dict match)',
    '[Services: Ansible Playbook Service] Simple Playbook']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: admin
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {mode: LAB}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0ff12571-5530-428f-9f4e-d09f6cb963d6:
      alignment: left
      content: "It runs on 17 devices in DxD mode with 10 processes.\r\nThe devices\
        \ that are up are expected to pass the \"show version\" service,\r\nbut they\
        \ will still reach the end through the upward path, so all\r\n17 devices must\
        \ reach the \"End\" service and pass the workflow."
      positions: [-5, -5]
    682828ea-f876-4028-8bf9-eb67ac8e520b:
      alignment: left
      content: "This workflow is testing that:\r\n- DxD multiprocessing is working\
        \ correctly\r\n- a skipped service does not prevent the devices from moving\r\
        \nforward throughout the workflow.\r\n- the RBAC \"default access\" restriction\
        \ to admin users is working\r\nas expected: the workflow should not be visible\
        \ to non-admin users.\r\n"
      positions: [-19, -89]
    d36009d8-ce3a-4ce6-8766-5dc3241d777b:
      content: The service "Napalm configure BGP" is configured to be skipped.
      positions: [329, -230]
  last_modified: '2021-09-22 06:36:55.324927'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 10
  maximum_runs: 1
  multiprocessing: true
  name: 'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Example Service (does nothing)',
    '[Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism] Show version
      with multiprocessing', '[Shared] REST API: call *is_alive* endpoint', '[Miscellaneous:
      DxD Multiprocessing, RBAC Admin Only, Skip Mechanism] napalm_configure_bgp_1']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto, Austin, Washington, Chicago, SanJose, SanDiego,
    Dallas, Houston, Baltimore, Cleveland, Cincinnati, Minneapolis, Sacramento, SanFrancisco,
    Oakland, Denver]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0d15f57d-aef4-47a4-9ba5-86ab26acace4:
      alignment: left
      content: "This service tests the case where both iteration devices and iteration\
        \ values\r\nare used at the same time.\r\nThe first service sets the necessary\
        \ variables, and the next 3 services uses\r\nthe iteration value with netmiko\
        \ to run a \"show interface {{ value }}\" command.\r\nThe last service uses\
        \ the iteration value to make a REST call to the following URL:\r\nhttp://127.0.0.1:5000/rest/instance/device/{{iteration_value}}"
      positions: [-244, 92]
    5043ff9c-79b0-4712-a706-502724ac4e31:
      alignment: left
      content: "The iteration devices field is set to \"get_var(\"Derived Devices\"\
        , device=device.name)\"\r\nThe iteration values are set to [\"Loopback11\"\
        ,\"Loopback15\"] (static), and the name\r\nof the iteration variable is set\
        \ to a non-default value.\r\nThe service does a \"show interface\" over the\
        \ loopback interfaces.\r\nFor \"Austin\", one of the iterated device is Atlanta\
        \ which does not exist,\r\nso netmiko should fail to connect and the service\
        \ will fail for Atlanta.\r\nAustin should stop here as a result, while Washington\
        \ moves forward."
      positions: [275, -72]
    76ece5f4-54f7-4f6b-8ea0-7d2918524e92:
      alignment: left
      content: "Only Washington should reach this service.\r\nThis service iterates\
        \ over a set of values \"Interfaces 1\"\r\ndefined at the first step (\"Modify\
        \ Payload\"):\r\nget_var('Interfaces 1', device=device.name)\r\nThe \"get_var\"\
        \ function will evaluate to\r\n['Loopback101', 'Loopback15']. None of these\
        \ interfaces\r\nexist, and the validation checks for \"does not exist\" in\
        \ the\r\noutput, so the service should pass."
      positions: [784, -98]
    93d396cb-cc7e-47ac-ac12-8f75207dcb14:
      alignment: left
      content: "This service combines iteration devices and iteration values once\
        \ again.\r\nThe iteration devices query is the same as  in \"Test 1\", except\
        \ that it uses\r\nthe \"parent_device\" global variable in the get_var function.\r\
        \nWhen iteration devices are computed, \"parent_device\" and \"device\"\r\n\
        should evaluate to the same device.\r\nFor each derived device, it will iterate\
        \ over the \"Interface 2\" variable which will\r\nevaluate to ['Loopback333',\
        \ 'Loopback334'] (set in the Modify Payload service).\r\nThe validation checks\
        \ that \"does not exist\" is in the result.\r\n\r\n"
      positions: [534, 324]
    b61a926f-87e4-48a6-86bd-74500e9568ab:
      alignment: left
      content: "Set the following variables in the payload :\r\n- Interfaces 1 : ['Loopback101',\
        \ 'Loopback15'] for \"Washington\"\r\notherwise ['Loopback9', 'Loopback1000']\r\
        \n- Derived Devices : [\"Atlanta\", \"Austin\"] for \"Austin\" else [\"Washington\"\
        ]\r\n- Interfaces 2 : ['Loopback333', 'Loopback334'] for any device"
      positions: [-261, -105]
    fbd0224f-eae2-461b-bfc5-9de385e078f0:
      alignment: left
      content: "The iteration values field is hardcoded to '[\"Washington\", \"Atlanta\"\
        ]'.\r\nThe service makes a REST call to\r\nhttp://127.0.0.1:5000/rest/instance/device/{{get_var('iteration_value')}}."
      positions: [-113, 314]
  last_modified: '2021-09-22 06:19:08.939993'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Iteration Mechanism: Combined Device & Target Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Iteration Mechanism: Combined Device & Target Iteration'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Modify Payload for Iteration',
    '[Iteration Mechanism: Combined Device & Target Iteration] Iteration Target Workflow
      - Test 2', '[Iteration Mechanism: Combined Device & Target Iteration] Iteration
      Targets Workflow - Test 1', '[Iteration Mechanism: Combined Device & Target
      Iteration] Iteration Target Workflow - Test 3', '[Iteration Mechanism: Combined
      Device & Target Iteration] Iteration Targets Workflow - Test 4']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  add_header: true
  close_connection: true
  commands:
  - {prefix: shusers, value: show run}
  - {prefix: shipintbr, value: show ip interface brief}
  - {prefix: '', value: show vrf}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-06-01 10:08:24.484251'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Operational Data Backup (admin)] Retrieve Operational Data'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Operational Data Backup (admin): &id171 [-125, 15]
    'Regression Workflow 9: Operational Data Backup': *id171
    'Regression Workflow 9: Operational Data Backup (admin)': *id171
    'Regression Workflow: Operational Data Backup (admin)': *id171
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  property: operational_data
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Retrieve Operational Data
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: [Washington]
  time_between_retries: 10
  timeout: 10
  type: netmiko_backup_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:08.992688'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: DxD and SxS Run Methods
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: DxD and SxS Run Methods
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[DxD and SxS Run Methods] Workflow  in
      device by device mode', '[DxD and SxS Run Methods] Service in run once mode',
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)',
    '[DxD and SxS Run Methods] Service in Run once per device mode', '[DxD and SxS
      Run Methods] Workflow in service targets mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.031773'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow  in device by device mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    DxD and SxS Run Methods: &id172 [-296, -98]
    'Regression Workflow G: run methods (BFS)': *id172
    'Regression Workflow: DxD and SxS Run Methods': *id172
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Workflow  in device by device mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow  in
      device by device mode] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-05 04:47:34.680139'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Service in run once mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  password: ''
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    DxD and SxS Run Methods: &id173 [-135, 189]
    'Regression Workflow G: run methods (BFS)': *id173
    'Regression Workflow: DxD and SxS Run Methods': *id173
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: ''
  run_method: per_device
  scoped_name: Service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: ''
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.058614'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    DxD and SxS Run Methods: &id174 [123, -96]
    'Regression Workflow G: run methods (BFS)': *id174
    'Regression Workflow: DxD and SxS Run Methods': *id174
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Workflow in service by service mode (workflow targets)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow
      in service by service mode (workflow targets)] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-05 04:48:35.401292'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Service in Run once per device mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  password: ''
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    DxD and SxS Run Methods: &id175 [254, 163]
    'Regression Workflow G: run methods (BFS)': *id175
    'Regression Workflow: DxD and SxS Run Methods': *id175
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: ''
  run_method: per_device
  scoped_name: Service in Run once per device mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: ''
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.084117'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow in service targets mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    DxD and SxS Run Methods: &id176 [622, -89]
    'Regression Workflow G: run methods (BFS)': *id176
    'Regression Workflow: DxD and SxS Run Methods': *id176
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Workflow in service targets mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow
      in service targets mode] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:52:26.145384'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow  in device by device mode] Validation
    show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id177 [248, -94]
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id177
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id177
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:52:44.909327'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow in service by service mode (workflow
    targets)] Validation show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id178 [
      239, -108]
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id178
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id178
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:53:36.285402'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow in service targets mode] Validation show
    VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id179 [234, -86]
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id179
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id179
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    2e441343-09bb-478c-91d2-78225ce412a7:
      alignment: left
      content: "This workflow tests:\r\n- subworkflow iteration (to run both in device\
        \ by device and service by service mode)\r\n- having the same shared service\
        \ in different subworkflow (make sure the progress\r\nis displayed per subworkflow\
        \ and not for the whole runtime)"
      positions: [146, -81]
    468e9cf3-85da-4e97-9a1c-0acc89076aeb:
      alignment: left
      content: "This first subworkflow will run on Washington and Austin\r\nas hardcoded\
        \ iterated devices.\r\nWashington should pass the shared service, Austin fail.\r\
        \nA failure edge is drawn to the end, so both iterated devices\r\nshould pass\
        \ the workflow, and it should be a success\r\nfor PaloAlto (iteration device)."
      positions: [-213, 46]
    77bbb8a5-d4ab-4eed-818d-da17f6ec405d:
      alignment: left
      content: "This subworkflow contains the same shared service, but :\r\n- it runs\
        \ on Washington and Atlanta\r\n- Atlanta should fail and no failure edge exists\
        \ to the end\r\n=> The workflow should fail for PaloAlto.\r\nPaloAlto should\
        \ still reach end through the failure edge,\r\nso the top-level workflow should\
        \ be a success."
      positions: [580, 192]
  last_modified: '2021-09-22 06:19:09.115602'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Shared Service in Multiple Subworkflows
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Shared Service in Multiple Subworkflows
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared Service in Multiple Subworkflows]
      Subworkflow 1', '[Shared Service in Multiple Subworkflows] Subworkflow 2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Austin"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.151318'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared Service in Multiple Subworkflows] Subworkflow 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow H: shared service in multiple subworkflows': &id180 [-241,
      197]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id180
    Shared Service in Multiple Subworkflows: *id180
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow 1
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Shared Service for Regression
      Workflow H']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Atlanta"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.178370'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared Service in Multiple Subworkflows] Subworkflow 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow H: shared service in multiple subworkflows': &id181 [548,
      48]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id181
    Shared Service in Multiple Subworkflows: *id181
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow 2
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Shared Service for Regression
      Workflow H']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: NOMATCH
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-16 16:46:16.211030'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Shared Service for Regression Workflow H'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id182 [
      167, -185]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id183 [
      243, -104]
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id182
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id183
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id182
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id183
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Shared Service for Regression Workflow H
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-19 05:09:22.996758'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Services: Ansible Playbook Service] Simple Playbook'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: false
  playbook_path: /media/sf_shared/eNMS/files/playbooks/simple_playbook.yml
  pools: ['All devices, links, services and users']
  positions:
    Ansible with Validation: [-630, 214]
    'Regression Workflow 6: Ansible with Validation': &id184 [-536, 192]
    'Regression Workflow: Ansible with Validation': *id184
    'Services: Ansible Playbook Service': [-640, 277]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Simple Playbook
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    13d32f97-9185-4863-adf0-0a741471f8fc:
      alignment: left
      content: "The iteration value field is set to the \"dict_iteration\" variable\
        \ via get_result,\r\nwith the iteration variable name set to \"command_dict\"\
        .\r\nThe service uses netmiko to show the vrf \"test\" and \"test2\", via\r\
        \nthe command \"show vrf {{command_dict[\"command\"]}}\"."
      positions: [454, 90]
    9a8d7756-d57d-48bd-97fe-1f3df896110c:
      alignment: left
      content: "This workflow is testing a specific case of the iteration target mechanism,\r\
        \nwhere the iteration variable is a dictionary: eNMS iterates over the values\r\
        \nof the dictionary.\r\nThe workflow proceeds to using the dictionary values\
        \ with netmiko to\r\nshow the associated VRFs via the \"show vrf {{...}}\"\
        \ command."
      positions: [150, -174]
    f93c7a5d-e43f-43a6-b392-fe75c02ab798:
      alignment: left
      content: "Set the \"result\" value to the following dictionary:\r\n\"dict_iteration\"\
        : {\r\n    \"variable1\": {\"command\": \"test\"},\r\n    \"variable2\": {\"\
        command\": \"test2\"}\r\n}"
      positions: [-111, 83]
  last_modified: '2021-09-22 06:19:09.211190'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Iteration Mechanism: Dictionary as Iteration Target Variable'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Iteration Mechanism: Dictionary as Iteration Target Variable'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Iteration Mechanism: Dictionary as
      Iteration Target Variable] Set Variables for Iteration', '[Iteration Mechanism:
      Dictionary as Iteration Target Variable] Show VRF with iteration']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-22 09:57:19.634575'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Dictionary as Iteration Target Variable] Set Variables
    for Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Iteration Targets: &id186 [132, -202]
    Basic Iteration Targets with Netmiko: [-209, -7]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': &id185 [-209,
      -7]
    Iteration Targets with a Dictionary: *id185
    'Regression Workflow I: Iteration Targets Advanced': *id186
    'Regression Workflow: Advanced Iteration Targets': *id186
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Set Variables for Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Advanced Iteration Targets': false}
  skip_query: ''
  skip_value: success
  source_code: "results[\"success\"] = True\r\nresults[\"result\"] = {\r\n  \"dict_iteration\"\
    : {\r\n    \"variable1\": {\"command\": \"test\"},\r\n    \"variable2\": {\"command\"\
    : \"test2\"}\r\n  }\r\n}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf {{command_dict["command"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: get_result("Set Variables for Iteration", device=device.name)["result"]["dict_iteration"]
  iteration_variable_name: command_dict
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-22 10:09:31.770582'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Dictionary as Iteration Target Variable] Show VRF with
    iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Advanced Iteration Targets: &id188 [135, 100]
    Basic Iteration Targets with Netmiko: [436, -6]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': &id187 [436, -6]
    Iteration Targets with a Dictionary: *id187
    'Regression Workflow I: Iteration Targets Advanced': *id188
    'Regression Workflow: Advanced Iteration Targets': *id188
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show VRF with iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Advanced Iteration Targets': false}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '["A", "B", "C"]'
  iteration_variable_name: top_level_iteration
  labels:
    0f4aee6b-bb98-4f76-b25c-1286a2aab65a:
      alignment: left
      content: "This workflow runs with iteration value set to [\"A\", \"B\", \"C\"\
        ] (variable: \"top_level_iteration\"),\r\non one device: Washington.\r\nThe\
        \ first service will simply use the iteration value in the result (expected:\
        \ 3 results)\r\nThe first subworkflow tests iteration value with a subworkflow\
        \ on 3 values:\r\n[1, 2, 3] (variable: \"subworkflow_iteration\").\r\nThe\
        \ second subworkflow tests subworkflow combined device and value iteration\
        \ in DxD mode.\r\nThe third subworkflow tests subworkflow device iteration\
        \ in SxS w/ WF targets mode.\r\nExpected 3 results for the subworkflow, and\
        \ 9 results for the service within it.\r\nThis workflow must be tested both\
        \ in DxD and SxS w/ WF targets run mode."
      positions: [229, 303]
    1aaeee9b-2ae3-428f-86c4-a0ddba662139:
      alignment: left
      content: "Iteration value retrieved from payload:\r\n\"get_var(\"device_iteration\"\
        , device=device.name)\"\r\nShould evaluate to \"[\"Atlanta\", \"SanFrancisco\"\
        ]\".\r\nWorkflow in SxS w/ WF targets mode."
      positions: [699, 577]
    4a67748b-2d06-47fc-b648-39e02d6cf123:
      alignment: left
      content: "Tests subworkflow combined iteration in DxD mode,\r\nwith iteration\
        \ devices set to [\"PaloAlto\", \"Austin\"],\r\nand value iteration set to\
        \ [\"D\", \"E\"].\r\nExpected number of iteration:\r\n|top-level iteration|\
        \ * |device iteration| * |value iteration|\r\n= 3 * 2 * 2 = 12."
      positions: ['255.35369723338', '601.2747609264446']
    7c717702-3a49-4a67-b1d0-c8471f149114:
      alignment: left
      content: "Hardcoded iteration values: [1, 2, 3]\r\nExpected results:\r\n- 3\
        \ results for the workflow, one per top-level iteration value\r\n- 9 results\
        \ for the service inside the workflow, one per couple\r\n(top-level iteration\
        \ value, workflow iteration value) = [1, 2, 3] X [A, B, C]"
      positions: [-193, 601]
    a58455e0-c6d5-4eb5-9d1d-7cf72ffe706e:
      alignment: left
      content: 3 expected results.
      positions: [-192, 218]
  last_modified: '2021-09-22 06:19:09.256733'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Iteration Mechanism: Workflow and Subworkflow Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Iteration Mechanism: Workflow and Subworkflow Iteration'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Iteration Mechanism: Workflow and
      Subworkflow Iteration] Test Iteration', '[Iteration Mechanism: Workflow and
      Subworkflow Iteration] Subworkflow Value Iteration', '[Iteration Mechanism:
      Workflow and Subworkflow Iteration] Subworkflow Device Iteration', '[Iteration
      Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration
      2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:15:03.998374'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Workflow and Subworkflow Iteration] Test Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [-197, 268]
    'Regression Workflow J: Workflow and Subworkflow Iteration': [226, -76]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-210, 233]
    Workflow and Subworkflow Iteration: [-210, 233]
  postprocessing: set_var("device_iteration", ["Atlanta", "SanFrancisco"], device=device.name)
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result={\"top_level\": top_level_iteration}\r\nresults[\"result\"\
    ] = result\r\nresults[\"success\"] = True"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '[1, 2, 3]'
  iteration_variable_name: subworkflow_iteration
  labels: {}
  last_modified: '2021-09-22 06:19:09.291064'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value
    Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [-182, 477]
    'Regression Workflow J: Workflow and Subworkflow Iteration': [218, 171]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-182, 477]
    Workflow and Subworkflow Iteration: [-182, 477]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow Value Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Iteration Mechanism: Workflow and
      Subworkflow Iteration] Subworkflow Value Iteration] Test Iteration']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-26 07:05:54.058757'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value
    Iteration] Test Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id189 [
      231, -87]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id189
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id189
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id189
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id189
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result={\"top_level\": top_level_iteration, \"subworkflow\": subworkflow_iteration}\r\
    \nresults[\"success\"] = True\r\nresults[\"result\"] = result\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: is_alive
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    031755da-162e-475a-a798-29deb02cff55:
      alignment: left
      content: "Test \"Run on failure\" post-processing\r\nby setting success to False.\r\
        \nPostprocessing set the variables \"should be there\":\r\nthis variable should\
        \ be in the results.\r\n\r\nBesides, the results should contain:\r\n- func_result\
        \ set to eos (Washington) / IOS (Chicago)\r\n- cls_result set to Washington\
        \ / Chicago"
      positions: [559, 16]
    15b463f1-e8ba-4d61-a84f-cf39d1434533:
      alignment: left
      content: "Preprocessing: set a per-device variable \"device OS\" in payload\
        \ with set_var\r\nPython snippet: retrieves the variable with get_var and\
        \ adds it to the results\r\nPostprocessing: set to \"Failure only\" but the\
        \ service is a success,\r\nso doesn't run.\r\nThe variable \"BUG\" shouldn't\
        \ be in the results.\r\nThis service is also adding a FUNCTION and a CLASS\
        \ in the payload with set_var :\r\n\r\ndef test():\r\n    return device.operating_system\r\
        \n\r\nclass Test():\r\n    device = device.name"
      positions: [-16, 269]
  last_modified: '2021-09-22 06:19:09.321688'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Preprocessing and Postprocessing Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Preprocessing and Postprocessing Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Preprocessing and Postprocessing
      Mechanism] Preprocessing', '[Preprocessing and Postprocessing Mechanism] Service
      preprocessing and postprocessing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Specific Superworkflow
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-17 05:05:10.364625'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Preprocessing and Postprocessing Mechanism] Preprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Preprocessing and Postprocessing Mechanism: &id190 [-26, 123]
    'Regression Workflow K: preprocessing and postprocessing': *id190
    'Regression Workflow: Preprocessing and Postprocessing': *id190
  postprocessing: "results[\"postprocessing\"] = f\"Value set with postprocessing\
    \ for {device.name}\"\r\n\r\ndef test():\r\n  \treturn device.operating_system\r\
    \n\r\nclass Test():\r\n  device = device.name\r\n\r\nset_var(\"func\", test, device=device.name)\r\
    \nset_var(\"cls\", Test, device=device.name)\r\n"
  postprocessing_mode: always
  preprocessing: set_var("test", device.operating_system, device=device.name)
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Preprocessing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = test"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-04 09:38:15.173377'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Preprocessing and Postprocessing Mechanism] Service preprocessing and postprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Preprocessing and Postprocessing Mechanism: &id191 [558, 152]
    'Regression Workflow K: preprocessing and postprocessing': *id191
    'Regression Workflow: Preprocessing and Postprocessing': *id191
  postprocessing: "results[\"SHOULD BE THERE\"] = \"NO BUG\"\r\n\r\nresults[\"func_result\"\
    ] = func()\r\nresults[\"cls_result\"] = cls().device"
  postprocessing_mode: failure
  preprocessing: set_var("integer", 10)
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service preprocessing and postprocessing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "results[\"integer\"] = 10 + integer\r\nresults[\"success\"] = False"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-24 07:01:45.366014'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Placeholder'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow L: superworkflow': &id192 [511, -111]
    'Regression Workflow: Specific Superworkflow': *id192
    'Regression Workflow: Superworkflow': *id192
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id193 [
      408, 135]
    Specific Superworkflow: *id192
    Superworkflow in SxS w WT with Run Once service: *id193
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Placeholder
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.380114'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Specific Superworkflow
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Specific Superworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Placeholder', '[Shared] REST
      API: call *is_alive* endpoint', '[Specific Superworkflow] REST API: call to
      placeholder property', '[Specific Superworkflow] Post Placeholder Processing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanJose, SanDiego]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    72a98179-fe57-4bca-ac49-2d7f4912954f:
      alignment: left
      content: "This service uses the password admin in the \"Jump on Connect\" section\
        \ :\r\nthis password must be set to \"admin\" after database reload."
      positions: [392, 270]
  last_modified: '2021-09-22 06:19:09.430979'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Unix Command & Chell, Ping Service, Jump on Connect mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Unix Command & Chell, Ping Service, Jump on Connect mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Unix Command & Chell, Ping Service,
      Jump on Connect mechanism] Unix command: ps -ef | grep test', '[Unix Command
      & Chell, Ping Service, Jump on Connect mechanism] Unix shell: ping eNMS server
      from remote server', '[Unix Command & Chell, Ping Service, Jump on Connect mechanism]
      Ping Washington', '[Unix Command & Chell, Ping Service, Jump on Connect mechanism]
      Validation: jump on server 2 from Washington']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  command: ps -ef
  completion_time: 1
  content_match: python\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-26 13:24:11.303147'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Unix Command & Chell, Ping Service, Jump on Connect mechanism] Unix command:
    ps -ef | grep test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id194 [
      -177, -94]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-148, -126]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id194
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id194
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Unix command: ps -ef | grep test'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: unix_command_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: false
  close_connection: false
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: 5 received
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: linux
  enable_mode: true
  expect_string: root.*#
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-26 05:39:44.995695'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Unix Command & Chell, Ping Service, Jump on Connect mechanism] Unix shell:
    ping eNMS server from remote server'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id195 [
      -113, 220]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-76, 172]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id195
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id195
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Unix shell: ping eNMS server from remote server'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "#!/bin/bash\r\nping_result=`ping -c 5 192.168.56.102`  # Needs privileged\
    \ mode\r\nreturn_code=$?\r\nif [ $return_code -ne 0 ]; then\r\n    exit $return_code\
    \  # Indicating Failure\r\nelse\r\n    echo -e \"$ping_result\"\r\n    exit 0\r\
    \nfi\r\n"
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Server 2]
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: unix_shell_script_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  count: 5
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-27 13:40:16.952410'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Unix Command & Chell, Ping Service, Jump on Connect mechanism] Ping Washington'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  packet_size: 56
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  ports: '22'
  positions:
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id196 [
      200, -71]
    'Regression Workflow M: Unix command & shell, ping, jump server': [182, -134]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id196
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id196
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  protocol: ICMP
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Ping Washington
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 2
  ttl: 60
  type: ping_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.473944'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Topology Import Service (netbox, librenms, opennms)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Topology Import Service (netbox, librenms, opennms)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Topology Import Service (netbox,
      librenms, opennms)] OpenNMS Import']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  import_type: opennms
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-27 15:00:28.449935'
  librenms_address: http://librenms.example.com
  librenms_token: ''
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Topology Import Service (netbox, librenms, opennms)] OpenNMS Import'
  negative_logic: false
  netbox_address: http://0.0.0.0:8000
  netbox_token: ''
  notification_header: ''
  number_of_retries: 0
  opennms_address: https://demo.opennms.org/opennms/rest
  opennms_devices: ''
  opennms_login: demo
  opennms_password: ''
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id197 [
      113, -104]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id197
    Topology Import Service (netbox, librenms, opennms): *id197
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: OpenNMS Import
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: topology_import_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: ps -ef
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: python\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: 'admin.*:'
  expect_prompt: .*$
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh 192.168.56.103
  jump_on_connect: true
  jump_password: ''
  jump_username: ''
  last_modified: '2020-03-28 05:52:51.717182'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Unix Command & Chell, Ping Service, Jump on Connect mechanism] Validation:
    jump on server 2 from Washington'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id198 [
      358, 190]
    'Regression Workflow M: Unix command & shell, ping, jump server': [338, 138]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id198
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id198
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Validation: jump on server 2 from Washington'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-28 10:36:29.931698'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Specific Superworkflow] REST API: call to placeholder property'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow L: superworkflow': &id199 [227, 151]
    'Regression Workflow: Specific Superworkflow': *id199
    'Regression Workflow: Superworkflow': *id199
    Specific Superworkflow: *id199
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{ placeholder.definition }}
  run_method: per_device
  scoped_name: 'REST API: call to placeholder property'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Columbus]
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show version
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: public
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-08-07 08:46:58.575856'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Open File Descriptors Leak (public)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Open File Descriptors Leak (public)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Chicago, Boston, Baltimore, Cleveland, Columbus, Cincinnati, Cambridge]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  add_header: true
  close_connection: false
  commands:
  - {prefix: '', value: show run}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-30 06:09:05.488720'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Operational Data Backup (admin)] Get Configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Operational Data Backup (admin): &id200 [-455, 15]
    'Regression Workflow 9: Operational Data Backup': *id200
    'Regression Workflow 9: Operational Data Backup (admin)': *id200
    'Regression Workflow: Operational Data Backup (admin)': *id200
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  property: configuration
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_backup_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  add_commit: true
  commit_message: Automatic commit (configurations)
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  git_repository: network_data
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-20 04:43:07.649203'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Operational Data Backup (admin)] Push Configurations to Git'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Operational Data Backup (admin): &id201 [148, 191]
    'Regression Workflow 9: Operational Data Backup': *id201
    'Regression Workflow 9: Operational Data Backup (admin)': *id201
    'Regression Workflow: Operational Data Backup (admin)': *id201
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  pull: true
  push: true
  relative_path: true
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Push Configurations to Git
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Operational Data Backup (admin)': true}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: git_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-24 03:55:19.605566'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Specific Superworkflow] Post Placeholder Processing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow L: superworkflow': &id202 [606, 47]
    'Regression Workflow: Specific Superworkflow': *id202
    'Regression Workflow: Superworkflow': *id202
    Specific Superworkflow: *id202
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post Placeholder Processing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(placeholder.name)[\"summary\"]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.513243'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Scrapli Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Scrapli Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Scrapli Service] Check running configuration',
    '[Scrapli Service] Configure VRF TEST-VRF', '[Scrapli Service] Check that TEST-VRF
      is configured', '[Scrapli Service] Decommission VRF TEST-VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  commands: "show run\r\nshow vrf"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: cisco_iosxe
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-15 02:01:30.590001'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Service] Check running configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow O: Scrapli': &id203 [-33, -167]
    'Regression Workflow: Scrapli': *id203
    Scrapli Service: *id203
  postprocessing: results["success"] = "TEST-VRF" not in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check running configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  commands: vrf instance TEST-VRF
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: true
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-19 03:57:12.933011'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Service] Configure VRF TEST-VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow O: Scrapli': &id204 [402, -161]
    'Regression Workflow: Scrapli': *id204
    Scrapli Service: *id204
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Configure VRF TEST-VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  commands: "show run\r\nshow vrf"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: cisco_iosxe
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-15 02:50:17.263309'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Service] Check that TEST-VRF is configured'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow O: Scrapli': &id205 [6, 112]
    'Regression Workflow: Scrapli': *id205
    Scrapli Service: *id205
  postprocessing: results["success"] = "TEST-VRF" in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check that TEST-VRF is configured
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  commands: no vrf instance TEST-VRF
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: true
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-19 03:57:21.922089'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Service] Decommission VRF TEST-VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow O: Scrapli': &id206 [373, 107]
    'Regression Workflow: Scrapli': *id206
    Scrapli Service: *id206
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Decommission VRF TEST-VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:09.623123'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 8
  maximum_runs: 1
  multiprocessing: true
  name: Scalability Test (large workflow)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Scalability Test (large workflow)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] REST API: call *is_alive*
      endpoint', '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint',
    '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint 2', '[Scalability
      Test (large workflow)] REST API: call *is_alive* endpoint 3', '[Scalability
      Test (large workflow)] REST API: call *is_alive* endpoint 4', '[Scalability
      Test (large workflow)] REST API: call *is_alive* endpoint 5', '[Scalability
      Test (large workflow)] Show vrf with netmiko 1', '[Scalability Test (large workflow)]
      Show vrf with netmiko 2', '[Scalability Test (large workflow)] Show vrf with
      netmiko 3', '[Scalability Test (large workflow)] Show vrf with netmiko 4', '[Scalability
      Test (large workflow)] Show vrf with netmiko 5', '[Scalability Test (large workflow)]
      Show vrf with netmiko 6', '[Scalability Test (large workflow)] Sleep with python',
    '[Scalability Test (large workflow)] Sleep with python 2', '[Scalability Test
      (large workflow)] Sleep with python 3', '[Scalability Test (large workflow)]
      Sleep with python 4', '[Scalability Test (large workflow)] Sleep with python
      5', '[Scalability Test (large workflow)] Sleep with python 6', '[Scalability
      Test (large workflow)] Sleep with python 7', '[Scalability Test (large workflow)]
      Sleep with python 8']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: ['All devices, links, services and users', Devices only, Links only,
    Datacenter San Francisco, Datacenter New York, Datacenter Chicago, Washington,
    Links 0 through 5 - Non-public pool - Access set up, Links 6 through 9 - Public
      pools]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-28 10:36:02.393623'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': [-10, 157]
    'Regression Workflow C: Advanced multiprocessing': [340, 109]
    'Regression Workflow D: Prompts': [405, -103]
    'Regression Workflow L: superworkflow': [162, -126]
    'Regression Workflow P: large workflow (scalability)': &id207 [-404, -20]
    'Regression Workflow: Scalability Test (large workflow)': *id207
    'Regression workflow P: large workflow (scalability)': *id207
    Scalability Test (large workflow): *id207
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:22:56.588493'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id208 [-406, 73]
    'Regression Workflow: Scalability Test (large workflow)': *id208
    'Regression workflow P: large workflow (scalability)': *id208
    Scalability Test (large workflow): *id208
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint 2'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:23:04.891363'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id209 [-402, 156]
    'Regression Workflow: Scalability Test (large workflow)': *id209
    'Regression workflow P: large workflow (scalability)': *id209
    Scalability Test (large workflow): *id209
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint 3'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:23:09.409631'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint 4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id210 [-94, 200]
    'Regression Workflow: Scalability Test (large workflow)': *id210
    'Regression workflow P: large workflow (scalability)': *id210
    Scalability Test (large workflow): *id210
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint 4'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:23:17.465645'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Scalability Test (large workflow)] REST API: call *is_alive* endpoint 5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id211 [-94, 109]
    'Regression Workflow: Scalability Test (large workflow)': *id211
    'Regression workflow P: large workflow (scalability)': *id211
    Scalability Test (large workflow): *id211
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint 5'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:01.412880'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id212 [-117, 5]
    'Regression Workflow: Scalability Test (large workflow)': *id212
    'Regression workflow P: large workflow (scalability)': *id212
    Scalability Test (large workflow): *id212
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:08.389448'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id213 [-81, -125]
    'Regression Workflow: Scalability Test (large workflow)': *id213
    'Regression workflow P: large workflow (scalability)': *id213
    Scalability Test (large workflow): *id213
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:14.709003'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id214 [-89, -196]
    'Regression Workflow: Scalability Test (large workflow)': *id214
    'Regression workflow P: large workflow (scalability)': *id214
    Scalability Test (large workflow): *id214
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:25.381253'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id215 [183, -222]
    'Regression Workflow: Scalability Test (large workflow)': *id215
    'Regression workflow P: large workflow (scalability)': *id215
    Scalability Test (large workflow): *id215
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 4
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:35.821369'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id216 [188, -130]
    'Regression Workflow: Scalability Test (large workflow)': *id216
    'Regression workflow P: large workflow (scalability)': *id216
    Scalability Test (large workflow): *id216
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 5
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-23 04:24:46.398373'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Show vrf with netmiko 6'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id217 [190, -36]
    'Regression Workflow: Scalability Test (large workflow)': *id217
    'Regression workflow P: large workflow (scalability)': *id217
    Scalability Test (large workflow): *id217
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with netmiko 6
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:25:47.575549'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id218 [194, 47]
    'Regression Workflow: Scalability Test (large workflow)': *id218
    'Regression workflow P: large workflow (scalability)': *id218
    Scalability Test (large workflow): *id218
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:26:11.463154'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id219 [203, 127]
    'Regression Workflow: Scalability Test (large workflow)': *id219
    'Regression workflow P: large workflow (scalability)': *id219
    Scalability Test (large workflow): *id219
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:26:15.643665'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id220 [207, 230]
    'Regression Workflow: Scalability Test (large workflow)': *id220
    'Regression workflow P: large workflow (scalability)': *id220
    Scalability Test (large workflow): *id220
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:26:24.286728'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id221 [476, 232]
    'Regression Workflow: Scalability Test (large workflow)': *id221
    'Regression workflow P: large workflow (scalability)': *id221
    Scalability Test (large workflow): *id221
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 4
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:27:00.421513'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id222 [471, 142]
    'Regression Workflow: Scalability Test (large workflow)': *id222
    'Regression workflow P: large workflow (scalability)': *id222
    Scalability Test (large workflow): *id222
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 5
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:27:07.869515'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 6'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id223 [476, 44]
    'Regression Workflow: Scalability Test (large workflow)': *id223
    'Regression workflow P: large workflow (scalability)': *id223
    Scalability Test (large workflow): *id223
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 6
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:27:13.996425'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 7'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id224 [469, -50]
    'Regression Workflow: Scalability Test (large workflow)': *id224
    'Regression workflow P: large workflow (scalability)': *id224
    Scalability Test (large workflow): *id224
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 7
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 04:27:25.383275'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scalability Test (large workflow)] Sleep with python 8'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow P: large workflow (scalability)': &id225 [467, -163]
    'Regression Workflow: Scalability Test (large workflow)': *id225
    'Regression workflow P: large workflow (scalability)': *id225
    Scalability Test (large workflow): *id225
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Sleep with python 8
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "from time import sleep\r\nsleep(1)\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3a9a1a53-0a95-44f3-89a6-63431f9ece91:
      alignment: left
      content: "This workflow should be run on both Washington and Austin,\r\nas Austin\
        \ will use the SSH key authentication. Key-based auth must be\r\ntested for\
        \ the generic file transfer as it does not use the netmiko\r\nauthentication\
        \ mechanism."
      positions: [38, -174]
  last_modified: '2021-09-22 06:19:09.728705'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Generic File Transfer
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Generic File Transfer
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Generic File Transfer] Check that
      test file does not exist', '[Generic File Transfer] Transfer a.bin', '[Generic
      File Transfer] Check that test file does exist', '[Generic File Transfer] Transfer
      bc.bin and bd.bin with glob option', '[Generic File Transfer] Delete all transferred
      files', '[Generic File Transfer] Transfer non-existing file']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:12:46.366228'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Generic File Transfer] Check that test file does not exist'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id227 [-243, -73]
    'Regression Workflow Q: File transfer': &id226 [-171, -148]
    'Regression Workflow: File Transfer Mechanism': *id226
    'Regression Workflow: Generic File Transfer': *id227
  postprocessing: results["success"] = "a.bin" not in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check that test file does not exist
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files/a.bin
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 04:08:50.675082'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[Generic File Transfer] Transfer a.bin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id229 [-120, 143]
    'Regression Workflow Q: File transfer': &id228 [-21, 255]
    'Regression Workflow: File Transfer Mechanism': *id228
    'Regression Workflow: Generic File Transfer': *id229
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer a.bin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/a.bin
  source_file_includes_globbing: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:13:28.626790'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Generic File Transfer] Check that test file does exist'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id231 [209, 155]
    'Regression Workflow Q: File transfer': &id230 [362, 239]
    'Regression Workflow: File Transfer Mechanism': *id230
    'Regression Workflow: Generic File Transfer': *id231
  postprocessing: "simple_file = \"a.bin\" in results[\"result\"]\r\nglob_files =\
    \ \"bc.bin\" in results[\"result\"] and \"bd.bin\" in results[\"result\"]\r\n\
    results[\"success\"] = simple_file and glob_files"
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check that test file does exist
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 04:12:14.915986'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[Generic File Transfer] Transfer bc.bin and bd.bin with glob option'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id233 [126, -84]
    'Regression Workflow Q: File transfer': &id232 [187, -140]
    'Regression Workflow: File Transfer Mechanism': *id232
    'Regression Workflow: Generic File Transfer': *id233
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer bc.bin and bd.bin with glob option
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/?[c|d].bi*
  source_file_includes_globbing: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: delete flash:/enms_files/*.bin
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:18:11.791054'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Generic File Transfer] Delete all transferred files'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id235 [460, -83]
    'Regression Workflow Q: File transfer': &id234 [517, -138]
    'Regression Workflow: File Transfer Mechanism': *id234
    'Regression Workflow: Generic File Transfer': *id235
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Delete all transferred files
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: No such file or directory
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 10:13:57.495865'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[Generic File Transfer] Transfer non-existing file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Generic File Transfer: &id237 [-385, 147]
    'Regression Workflow Q: File transfer': &id236 [-332, 180]
    'Regression Workflow: File Transfer Mechanism': *id236
    'Regression Workflow: Generic File Transfer': *id237
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer non-existing file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/test.bin
  source_file_includes_globbing: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: failure
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    047e351c-3263-4df8-b3b3-cbf7273d0a2e:
      alignment: left
      content: "This workflow tests the skip mechanism in SxS with WF targets mode.\r\
        \nIt runs on three devices: Austin, PaloAlto, Washington. Washington will\r\
        \nfail at the first service and stop.\r\nThe second service aims at making\
        \ sure that a service that is skipped globally\r\nshould not prevent devices\
        \ from moving forward throughout the workflow.\r\nSimilarly, a per-device\
        \ skipped service should also enable the skipped\r\ndevices to move forward:\
        \ the third service will skip PaloAlto with the skip\r\nquery, set to a skip\
        \ value of False. PaloAlto should go to the end via the\r\nfailure edge, and\
        \ Austin via the success edge."
      positions: [-166, 2]
    9da73478-f2b2-4d97-ba73-5d43d3e3abcd:
      alignment: left
      content: "In this service, postprocessing is set to\r\nresults[\"success\"]\
        \ = device.name != \"Washington\".\r\nWashington should fail, others should\
        \ pass."
      positions: [-579, 220]
  last_modified: '2021-09-22 06:19:09.773062'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Skip Mechanism: Skip in SxS with WF targets mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: 'Skip Mechanism: Skip in SxS with WF targets mode'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip Mechanism: Skip in SxS with
      WF targets mode] Partial failure (Washington)', '[Skip Mechanism: Skip in SxS
      with WF targets mode] Query Skipped Service', '[Skip Mechanism: Skip in SxS
      with WF targets mode] Globally Skipped Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:02.831326'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Skip in SxS with WF targets mode] Partial failure (Washington)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id238 [-124, -154]
    'Regression Workflow R: skip services in service by service mode': *id238
    'Regression Workflow: Skip Services in SxS mode': *id238
    'Skip Mechanism: Skip in SxS mode': [-392, 138]
    'Skip Mechanism: Skip in SxS with WF targets mode': [-595, 141]
    Skip Services in SxS mode: [-249, 110]
    'Workflow Regression R: skip services in service by service mode': *id238
  postprocessing: results["success"] = device.name != "Washington"
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Partial failure (Washington)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:39.317238'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Skip in SxS with WF targets mode] Query Skipped Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id239 [304, -102]
    'Regression Workflow R: skip services in service by service mode': *id239
    'Regression Workflow: Skip Services in SxS mode': *id239
    'Skip Mechanism: Skip in SxS mode': [298, 193]
    'Skip Mechanism: Skip in SxS with WF targets mode': [93, 160]
    Skip Services in SxS mode: [338, 103]
    'Workflow Regression R: skip services in service by service mode': *id239
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Query Skipped Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:17.891973'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Skip in SxS with WF targets mode] Globally Skipped Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id240 [12, 179]
    'Regression Workflow R: skip services in service by service mode': *id240
    'Regression Workflow: Skip Services in SxS mode': *id240
    'Skip Mechanism: Skip in SxS mode': [-49, 185]
    'Skip Mechanism: Skip in SxS with WF targets mode': [-226, 165]
    Skip Services in SxS mode: [31, -26]
    'Workflow Regression R: skip services in service by service mode': *id240
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Globally Skipped Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow R: skip services in service by service mode': true,
    'Skip Mechanism: Skip in SxS mode': true, 'Skip Mechanism: Skip in SxS with WF targets mode': true}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    055563ce-090a-4d88-b80c-c208f2befa69:
      alignment: left
      content: "This workflow runs on 6 devices including Washington.\r\nThe first\
        \ service will DISCARD 3 devices: router5-7.\r\nThe second service will skip\
        \ Washington in failed skip mode.\r\nWashington must follow the failure edges\
        \ while the other\r\ntwo devices follow the success edge.\r\nIn post-success\
        \ service, PaloAlto should be skip in failure mode,\r\nbut with no failure\
        \ edge it is equivalent to discard.\r\nIn the end, 2 devices should all run\
        \ the last service:\r\nAustin and Washington."
      positions: [-6, 145]
    065de869-c69f-4489-8c9a-8dbb520d1031:
      alignment: left
      content: "Must be tested both in:\r\n- device by device mode\r\n- service by\
        \ service with workflow targets mode"
      positions: [-65, 267]
    296bb5de-e6fa-42a1-a3de-f6ba257ee28b:
      alignment: left
      content: "The skip query is set to\r\n\"device.name.startswith(\"router\")\"\
        \r\nShould match router5, router6 and router7.\r\nSkip value is set to \"\
        Discard\"."
      positions: [-314, 453]
    9458426f-623e-46be-85e9-6b673e3e9575:
      alignment: left
      content: "In this service, the skip query is set to 'device.name == \"PaloAlto\"\
        ',\r\nand the skip value is set to \"Failure\". However, unlike the last service,\r\
        \nthere is no failure edge exiting the service, so PaloAlto should be\r\n\
        discarded here."
      positions: [480, 95]
    e74316f1-b154-4c62-af4e-e3ce8ebe1ee4:
      alignment: left
      content: "Skip query set to 'device.name == \"Washington\"'\r\nSkip value set\
        \ to \"Failure\". Washington should fail."
      positions: [55, 451]
  last_modified: '2021-09-22 06:19:09.829727'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip Mechanism: Conditional Skip
      Query in Failed and Discard Modes] Skip Washington with Skip value == False',
    '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Post-success
      service', '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes]
      Post-failure service', '[Skip Mechanism: Conditional Skip Query in Failed and
      Discard Modes] Final service', '[Skip Mechanism: Conditional Skip Query in Failed
      and Discard Modes] Skip router5-7 in discard mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington, router5, router6, router7]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-08-03 12:01:17.859136'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Skip
    Washington with Skip value == False'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id241 [-242, 237]
    'Regression Workflow S: conditional skip query in failed and discard mode': *id241
    'Regression Workflow S: conditional skip query with skip value set to False': *id241
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id241
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [38, 378]
    'Workflow Regression S: conditional skip query with skip value set to False': [
      -149, -30]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Washington with Skip value == False
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "Washington"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-18 00:13:35.279991'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Post-success
    service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id242 [412, 108]
    'Regression Workflow S: conditional skip query in failed and discard mode': *id242
    'Regression Workflow S: conditional skip query with skip value set to False': *id242
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id242
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [450, 173]
    'Workflow Regression S: conditional skip query with skip value set to False': [
      264, -16]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-success service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 04:46:08.378087'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Post-failure
    service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id243 [605, 248]
    'Regression Workflow S: conditional skip query in failed and discard mode': *id243
    'Regression Workflow S: conditional skip query with skip value set to False': *id243
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id243
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [519, 439]
    'Workflow Regression S: conditional skip query with skip value set to False': [
      208, 194]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-failure service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-08-03 12:00:41.901802'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Final
    service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id244 [660, 13]
    'Regression Workflow S: conditional skip query in failed and discard mode': *id244
    'Regression Workflow S: conditional skip query with skip value set to False': *id244
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id244
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [324, 323]
    'Workflow Regression S: conditional skip query with skip value set to False': [
      636, 63]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Final service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: public
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    12c1aa1a-19a6-41cc-a1b3-04c2e0abe15c:
      alignment: left
      content: "Tests get_neighbors on the main device Dallas\r\nwith many different\
        \ parameters.\r\nIf any of these tests fails, the whole service should fail."
      positions: [-262, 143]
    93568f7d-0cd8-4062-92e7-7bfb346ea1d2:
      alignment: left
      content: "Using get_neighbors as the iteration query.\r\nThe service should\
        \ use the four neighbors of Dallas as iteration targets.\r\nIt uses \"device.name\"\
        \ to query device info via the REST API.\r\nCredentials must be updated each\
        \ time."
      positions: [461, 143]
    a0ccdcaf-94b9-43f3-873c-db101440e363:
      alignment: left
      content: "This workflow is designed to test the get_neighbors function.\r\n\
        get_neighbors takes:\r\n- one mandatory parameter object type: \"link\" or\
        \ \"device\" to retrieve\r\neither the neighboring links of a device, or the\
        \ neighboring devices\r\n(connected to the original device via a link)\r\n\
        - an optional parameter direction (\"both\" / \"source\" / \"destination\"\
        ,\r\ndefault to \"both\").\r\n- any link parameters used to filter the links\
        \ that are to be considered"
      positions: [36, -131]
    a672b458-970b-42c5-958e-2c9de635e83d:
      alignment: left
      content: "The workflow is also testing the RBAC default access mechanism.\r\n\
        Default access is set to public, meaning that anyone can access it\r\nregardless\
        \ of how RBAC is configured.\r\nWhen logging in with \"ny\" user, it should\
        \ be visible in the workflow\r\nbuilder."
      positions: [28, -27]
  last_modified: '2021-09-22 06:19:09.887022'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Miscellaneous: Link Neighbors Mechanism
      and RBAC default access (public)] Test get_neighbors function', '[Miscellaneous:
      Link Neighbors Mechanism and RBAC default access (public)] Iterate over neighbors
      of workflow device']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-01 07:22:37.645802'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)]
    Test get_neighbors function'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Link Neighbors Mechanism (public): [-291, 68]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': [
      -291, 68]
    'Regression Workflow 1: link neighbors mechanism': &id245 [-20, 30]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id245
    'Regression Workflow 4: link neighbors mechanism': *id245
    'Regression Workflow 4: link neighbors mechanism (public)': *id245
    'Regression Workflow T: link neighbors mechanism': *id245
    'Regression Workflow: Link Neighbors Mechanism (public)': *id245
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test get_neighbors function
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "def names(instances):\r\n  return {instance.name for instance in instances}\r\
    \n\r\nresult = {}\r\n# neighbors in both direction\r\nresults[\"result\"] = {\r\
    \n  \t\"direction=both, device\": names(device.get_neighbors(\"device\")),\r\n\
    \t\"direction=both, link\": names(device.get_neighbors(\"link\")),\r\n\t\"direction=source,\
    \ device\": names(device.get_neighbors(\"device\", direction=\"source\")),\r\n\
    \t\"direction=source, link\": names(device.get_neighbors(\"link\", direction=\"\
    source\")),\r\n\t\"direction=destination, device\": names(device.get_neighbors(\"\
    device\", direction=\"destination\")),\r\n  \t\"direction=destination, link\"\
    : names(device.get_neighbors(\"link\", direction=\"destination\")),\r\n\t\"direction=both,\
    \ device, 10G\": names(device.get_neighbors(\"device\", model=\"10G\")),\r\n \
    \ \t\"direction=both, link, 400G\": names(device.get_neighbors(\"link\", model=\"\
    400G\")),\r\n  \t\"direction=source, device, 40G\": names(device.get_neighbors(\"\
    device\", direction=\"source\", model=\"40G\")),\r\n  \t\"direction=destination,\
    \ link, 10G\": names(device.get_neighbors(\"link\", direction=\"destination\"\
    , model=\"10G\")),\r\n}\r\nresults[\"expected_result\"] = {\r\n   \t\"direction=both,\
    \ device\": {\"Austin\", \"Atlanta\", \"Houston\", \"LosAngeles\"},\r\n\t\"direction=both,\
    \ link\": {\"link13\", \"link25\", \"link0\", \"link24\"},\r\n\t\"direction=source,\
    \ device\": {\"Atlanta\", \"LosAngeles\"},\r\n\t\"direction=source, link\": {\"\
    link25\", \"link24\"},\r\n\t\"direction=destination, device\": {\"Austin\", \"\
    Houston\"},\r\n  \t\"direction=destination, link\": {\"link13\", \"link0\"},\r\
    \n\t\"direction=both, device, 10G\": {\"Houston\"},\r\n  \t\"direction=both, link,\
    \ 400G\": {\"link25\", \"link24\"},\r\n  \t\"direction=source, device, 40G\":\
    \ set(),\r\n  \t\"direction=destination, link, 10G\": {\"link0\"},\r\n}\r\n\r\n\
    results[\"success\"] = True\r\nfor test, result in results[\"result\"].items():\r\
    \n    if result != results[\"expected_result\"][test]:\r\n        results[\"success\"\
    ] = False\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: device.get_neighbors("device")
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-01 07:28:53.069205'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)]
    Iterate over neighbors of workflow device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  password: ''
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    Link Neighbors Mechanism (public): [466, 49]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': [
      466, 49]
    'Regression Workflow 1: link neighbors mechanism': &id246 [401, -181]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id246
    'Regression Workflow 4: link neighbors mechanism': *id246
    'Regression Workflow 4: link neighbors mechanism (public)': *id246
    'Regression Workflow T: link neighbors mechanism': *id246
    'Regression Workflow: Link Neighbors Mechanism (public)': *id246
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/instance/device/{{device.name}}
  run_method: per_device
  scoped_name: Iterate over neighbors of workflow device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: NOVRF
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-10-21 21:59:43.430409'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko Prompts] Check VRF (NOVRF) exists'
  negative_logic: false
  notification_header: ''
  number_of_retries: 2
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko Prompts: &id247 [-291, -104]
    'Regression Workflow 1: Netmiko with validation and retries': [-142, -137]
    'Regression Workflow D: Prompts': *id247
    'Regression Workflow: Netmiko Prompts': *id247
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check VRF (NOVRF) exists
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 2
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    276a5b4a-720e-457a-8d66-6c49d03c937d:
      alignment: left
      content: "Delete the device \"---\" that was\r\ncreated by the factory function."
      positions: [165, 199]
    50a94bb5-ad54-4164-92a3-b4022d43de4d:
      alignment: left
      content: "Test fetch and fetch_all.\r\nChange name of device \"New-{device.id}\"\
        \ to \"No-{device.id}\".\r\nService is configured to update pools after running:\r\
        \nThe device should be removed from the pool San Francisco."
      positions: [-12, -58]
    bc5601cb-db25-4614-b82b-15122f71739b:
      alignment: left
      content: "We use get_result to fetch custom credentials\r\nfrom previous service\
        \ via variable substitution:\r\n* {{ get_result(\"Credentials encryption\"\
        , device=device.name)[\"username\"] }}\r\n* {{ get_result(\"Credentials encryption\"\
        , device=device.name)[\"password\"] }}"
      positions: [472, 301]
    d7ebfa57-b26d-4401-80c5-40f8be6c8519:
      alignment: left
      content: "Create a new device \"New-{device.id}\" for each device.\r\nThis device\
        \ should be put in San Francisco pool (contains letter \"e\")."
      positions: [-131, 275]
    e5b50708-629d-41ac-a83b-275946c7d45a:
      alignment: left
      content: "We encrypt credentials with the \"encrypt\" function.\r\nTo be decrypted\
        \ in the next service via\r\ncustom credentials variable substitution."
      positions: [576, -71]
  last_modified: '2021-09-22 06:36:49.432237'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Global Variables and post-run Pool Update Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Global Variables and post-run Pool Update Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Global Variables and post-run Pool
      Update Mechanism] Functions fetch and fetch_all', '[Global Variables and post-run
      Pool Update Mechanism] Credentials encryption', '[Global Variables and post-run
      Pool Update Mechanism] Show vrf with custom encrypted credentials', '[Global
      Variables and post-run Pool Update Mechanism] Factory function: Create new device',
    '[Global Variables and post-run Pool Update Mechanism] Delete function: delete
      new device']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:05:09.390396'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global Variables and post-run Pool Update Mechanism] Functions fetch and
    fetch_all'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global Variables and post-run Pool Update Mechanism: [28, 6]
    'Regression Workflow T: global variables': [-180, 198]
    'Regression Workflow T: global variables and post-run pool update': [-153, 159]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      28, 6]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Functions fetch and fetch_all
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nsuccess = True\r\nresults[\"result\"] = result\r\n\r\
    \ntry:\r\n    fetch(\"user\", name=\"admin\")\r\n    success = False\r\nexcept:\r\
    \n    pass\r\n\r\ntry:\r\n    fetch(\"access\", name=\"Full Access to Everything\"\
    )\r\n    success = False\r\nexcept:\r\n    pass\r\n\r\ntry:\r\n    fetch(\"task\"\
    , name=\"Full Access to Everything\")\r\n    success = False\r\nexcept:\r\n  \
    \  pass\r\n\r\nnew_device = fetch(\"device\", name=f\"New-{device.id}\")\r\n\r\
    \nresults[\"operations\"] = {\r\n    \"device\": new_device.name,\r\n    \"pool\"\
    : fetch(\"pool\", name=\"All devices, links, services and users\").name,\r\n \
    \   \"services\": [service.name for service in fetch_all(\"service\")]\r\n}\r\n\
    \r\nnew_device.name = f\"No-{device.id}\"\r\n\r\nresults[\"success\"] = success"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: true
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 04:20:21.737519'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global Variables and post-run Pool Update Mechanism] Credentials encryption'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global Variables and post-run Pool Update Mechanism: [544, 2]
    'Regression Workflow T: global variables': [42, -43]
    'Regression Workflow T: global variables and post-run pool update': [42, -43]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      568, 6]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Credentials encryption
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"username\"\
    ] = \"admin\"\r\nresults[\"password\"] = encrypt(\"admin\")\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: '{{ get_result("Credentials encryption", device=device.name)["username"]
    }}'
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-09-24 04:24:35.178486'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global Variables and post-run Pool Update Mechanism] Show vrf with custom
    encrypted credentials'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global Variables and post-run Pool Update Mechanism: [523, 216]
    'Regression Workflow T: global variables': [487, 104]
    'Regression Workflow T: global variables and post-run pool update': [487, 104]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      514, 220]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show vrf with custom encrypted credentials
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-18 00:06:35.440142'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Conditional Skip Query in Failed and Discard Modes] Skip
    router5-7 in discard mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id248 [-215, 70]
    'Regression Workflow S: conditional skip query in failed and discard mode': *id248
    'Regression Workflow S: conditional skip query with skip value set to False': *id248
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id248
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': [-335, 369]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip router5-7 in discard mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name.startswith("router")
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    263966e8-80d5-4cf2-a63f-5ca7fd56c6ec:
      alignment: left
      content: "Discards all devices whose\r\nmodel is not Juniper."
      positions: [-425, 385]
    7ac4a816-41e6-4737-aa39-4df30198b799:
      alignment: left
      content: "This service is configured to discard all devices,\r\nto test that\
        \ it works when all devices are discarded."
      positions: [13, 407]
    e463d7db-3148-4df3-acf9-62e42f52b73e:
      alignment: left
      content: "Discards all devices whose\r\nmodel is not Arista."
      positions: [335, 22]
    f8de3ca5-718c-4d76-860e-ddceeb7e3f83:
      alignment: left
      content: "This workflow runs on 5 devices:\r\n* 2 with model \"Arista\": Washington,\
        \ Austin\r\n* 3 with model \"Juniper\": Baltimore, Cambridge, Cincinnati\r\
        \nThe devices will take different success based on their model,\r\nusing the\
        \ \"Discard\" option of the skip mechanism.\r\nTo be tested both in DxD and\
        \ SxS WF targets mode.\r\nExpected results:\r\n- 3 devices discarded in the\
        \ upper path,\r\n0 device exiting via failure edge, 2 via sucess edge.\r\n\
        After \"Show VRF\", 2 via success or failure depending on\r\nwhether the router\
        \ is UP.\r\n- 2 devices discarded in the lower path, 0 device exiting\r\n\
        via failure edge, then all devices discarded in next service."
      positions: [-129, 146]
  last_modified: '2021-09-22 06:19:09.989584'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Skip Mechanism: Fork based on value with Skip Discard Mechanism'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Skip Mechanism: Fork based on value with Skip Discard Mechanism'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip Mechanism: Fork based on value
      with Skip Discard Mechanism] REST API: call *is_alive* endpoint', '[Skip Mechanism:
      Fork based on value with Skip Discard Mechanism] Arista devices', '[Skip Mechanism:
      Fork based on value with Skip Discard Mechanism] Juniper devices', '[Skip Mechanism:
      Fork based on value with Skip Discard Mechanism] Show VRF', '[Skip Mechanism:
      Fork based on value with Skip Discard Mechanism] is_alive endpoint 2: Skipped']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington, Baltimore, Cincinnati, Cambridge]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 07:50:53.187875'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Skip Mechanism: Fork based on value with Skip Discard Mechanism] REST API:
    call *is_alive* endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    Fork based on value with Skip Discard Mechanism: &id249 [-354, -22]
    'Regression Workflow 2: Separate Failure - Success paths': [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': [-10, 157]
    'Regression Workflow C: Advanced multiprocessing': [386, 124]
    'Regression Workflow D: Prompts': [405, -103]
    'Regression Workflow L: superworkflow': [162, -126]
    'Regression Workflow P: large workflow (scalability)': &id250 [-415, -115]
    'Regression Workflow U: fork based on value with skip discard mode': *id249
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id249
    'Regression workflow P: large workflow (scalability)': *id250
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [-480, 30]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:44:43.988142'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Fork based on value with Skip Discard Mechanism] Arista
    devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Fork based on value with Skip Discard Mechanism: &id251 [47, -29]
    'Regression Workflow U: fork based on value with skip discard mode': *id251
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id251
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [336, 89]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Arista devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.model != "Arista"
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:44:52.104274'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Fork based on value with Skip Discard Mechanism] Juniper
    devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Fork based on value with Skip Discard Mechanism: &id252 [-430, 342]
    'Regression Workflow U: fork based on value with skip discard mode': *id252
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id252
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [-434, 308]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Juniper devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.model != "Juniper"
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-09-25 04:28:01.307849'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Mechanism: Fork based on value with Skip Discard Mechanism] Show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Fork based on value with Skip Discard Mechanism: &id253 [574, 0]
    'Regression Workflow U: fork based on value with skip discard mode': *id253
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id253
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [548, 232]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:46:35.027296'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Skip Mechanism: Fork based on value with Skip Discard Mechanism] is_alive
    endpoint 2: Skipped'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: ''
  payload:
    a: b
    c: ['1', '2', '3']
  pools: ['All devices, links, services and users']
  positions:
    Fork based on value with Skip Discard Mechanism: &id254 [32, 431]
    'Regression Workflow U: fork based on value with skip discard mode': *id254
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id254
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': [-5, 318]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'is_alive endpoint 2: Skipped'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: 'True'
  skip_value: discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    7c48dd42-cfd7-435d-97d6-ae4b37603d84:
      alignment: left
      content: "In this service, Washington should be skipped\r\nwith a skipped value\
        \ of False:\r\nit should move forward to the subworkflow with the failure\
        \ edge.\r\nThe other devices should appear in the results under the \"devices\"\
        \ key."
      positions: ['-10', '-107']
    d4451b5e-1d2c-4a43-bbbc-3fd0e60eda25:
      alignment: left
      content: "When a service is in \"Run once\" mode, it must\r\nbe allowed to skip\
        \ devices with the skip query.\r\nThis also applies to a subworkflow in SxS\
        \ mode,\r\nwhich is equivalent to a service in run once mode.\r\nBesides,\
        \  the first service must be tested in full skip mode\r\nto make sure the\
        \ display is correct."
      positions: ['472', '-84']
    f9a7af7c-88d0-46ff-84f9-9a15cf4df7b1:
      alignment: left
      content: "PaloAlto is skipped at workflow level with skip value set to Discard.\r\
        \nIt should stop right there.\r\nIn the workflow, there is a service that\
        \ should be skipped for Austin:\r\nAustin won't reach the end and will be\
        \ considered a failure for the workflow.\r\nAustin should move along the failure\
        \ edge, and\r\nWashington should move along the success edge."
      positions: [-201, 295]
  last_modified: '2021-09-22 06:19:10.045776'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip Query with device in Run Once Mode
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Query with device in Run Once Mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip Query with device in Run Once
      Mode] Subworkflow in SxS mode - workflow targets', '[Skip Query with device
      in Run Once Mode] Python service in run once mode', '[Skip Query with device
      in Run Once Mode] Subworkflow in SxS mode - service targets']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.087263'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow
    targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id255 [-221,
      154]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id255
    Skip Query with device in Run Once Mode: *id255
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow in SxS mode - workflow targets
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip Query with device in Run Once
      Mode] Subworkflow in SxS mode - workflow targets] Fail Austin']
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: Discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-29 04:31:17.767321'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Python service in run once mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id256 [-31,
      3]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id256
    Skip Query with device in Run Once Mode: *id256
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Python service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "Washington"
  skip_value: failure
  source_code: "result = {}\r\nfor device in devices:\r\n  results.setdefault(\"devices\"\
    , []).append(device.name)\r\nresults[\"success\"] = True\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.110321'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service
    targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id257 [342,
      205]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id257
    Skip Query with device in Run Once Mode: *id257
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow in SxS mode - service targets
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-27 03:56:02.350546'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow
    targets] Fail Austin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id258 [
      230, -19]
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id258
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id258
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail Austin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = device.name ==\
    \ \"Washington\"\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    63712159-29e8-4848-8889-9e630019a516:
      alignment: left
      content: "Austin is discarded.\r\nPaloAlto should be stopped in the middle of\
        \ the workflow.\r\nExpected output: PaloAlto via failure edge,\r\nWashington\
        \ via success edge."
      positions: [404, 220]
    b4479263-ee3a-4526-a182-0b73b025d972:
      alignment: left
      content: "PaloAlto is skipped with skip value of False.\r\nAustin should be\
        \ stopped in the middle of the workflow.\r\nExpected output: PaloAlto and\
        \ Austin via failure edge,\r\nWashington on success edge."
      positions: [-227, 264]
    ec9df9f3-7b90-4939-99c7-c8cacf696a3d:
      alignment: left
      content: "This workflow tests that the disable result creation works fine.\r\
        \nAll results are disabled, except for the services in subworkflows.\r\nAND\
        \ does not prevent the workflow from running properly.\r\nTo be tested both\
        \ in DxD and SxS with workflow targets mode.\r\nRuns on: PaloAlto, Washington,\
        \ Austin"
      positions: [104, -127]
  last_modified: '2021-09-22 06:19:10.146943'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip, Discard and Disable Result Creation Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Skip, Discard and Disable Result Creation Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip, Discard and Disable Result
      Creation Mechanism] Pre-service with result creation disabled', '[Skip, Discard
      and Disable Result Creation Mechanism] Workflow in DxD mode', '[Skip, Discard
      and Disable Result Creation Mechanism] Workflow in SxS mode', '[Skip, Discard
      and Disable Result Creation Mechanism] Service in run once mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:51.093813'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Pre-service with result
    creation disabled'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow W: disable result creation mode': [-312, -10]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id259 [
      -254, -15]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id259
    Skip, Discard and Disable Result Creation Mechanism: *id259
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Pre-service with result creation disabled
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.187170'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow W: disable result creation mode': [-174, 154]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id260 [
      -231, 149]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id260
    Skip, Discard and Disable Result Creation Mechanism: *id260
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Workflow in DxD mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip, Discard and Disable Result
      Creation Mechanism] Workflow in DxD mode] Fail Austin']
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.214310'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow W: disable result creation mode': [442, 205]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id261 [
      379, 130]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id261
    Skip, Discard and Disable Result Creation Mechanism: *id261
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Workflow in SxS mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip, Discard and Disable Result
      Creation Mechanism] Workflow in SxS mode] Fail PaloAlto']
  shared: false
  skip: {}
  skip_query: device.name == "Austin"
  skip_value: Discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:55.852522'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Service in run once
    mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow W: disable result creation mode': [101, -37]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id262 [
      103, -43]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id262
    Skip, Discard and Disable Result Creation Mechanism: *id262
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:06:03.214998'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode]
    Fail Austin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id263 [
      224, -51]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id263
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id263
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id263
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail Austin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name == \"Washington\"\
    \r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:44.930376'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode]
    Fail PaloAlto'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id264 [
      220, -28]
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id264
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id264
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail PaloAlto
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name != \"PaloAlto\"\r\
    \nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show run
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-08-07 08:46:54.921205'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Connect to Router with Device Credentials
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Connect to Router with Device Credentials
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    16752478-6639-43a8-a2c5-e5dedd826184:
      alignment: left
      content: "This workflow must be tested with all different types of credential:\
        \ \r\n- Credential type \"any\" (default) should work as described on the\
        \ left:\r\n3 pass, 1 fail (Austin-3).\r\n- Credential type \"read-only\":\
        \ Washington should fail with the exception\r\n\"No matching credentials found\"\
        , because its associated credential\r\nis set to read-write.\r\nHowever, Austin3\
        \ should pass along with Austin and Austin-2\r\nbecause the Austin-3 \"wrong\
        \ credentials\" is also set to read-write,\r\nso Austin-3 will use the right\
        \ credential (SSH key) even though\r\nit has lower priority.\r\n- Credential\
        \ type \"read-write\": Austin and Austin-2 should use the\r\npassword-based\
        \ credential instead of the key-based credential\r\nbecause it is set to read-only.\r\
        \nAustin-3 should use the wrong credentials and fail."
      positions: ['486', '-109']
    86737c37-94b1-4c51-8f57-9cfcd32caf5a:
      alignment: left
      content: "This workflow runs on Washington, Austin, Austin-2 and Austin-3.\r\
        \n- Washington will use \"Router Credentials - Password\" (correct credentials).\r\
        \n- Austin and Austin-2 will match both \"Router Credentials - Password\"\r\
        \n and \"Router Credentials - SSH Key\", but the SSH key has higher priority\r\
        \nso they should use that to log in.\r\n- Austin-3 will match all credentials\
        \ but \"Router Credentials - Wrong Password\"\r\nhas higher priority, so it\
        \ should be used and\r\nthe connection should fail.\r\n\r\nAll devices but\
        \ Austin-3 should pass. For Austin and Austin-2,\r\nthe authentication in\
        \ the server logs should say \"authentication (publickey)\"\r\nand for Washington,\
        \ \"authentication (keyboard-interactive)\".\r\nThe logs also indicate which\
        \ credentials were used."
      positions: ['-71', '-110']
  last_modified: '2021-09-22 06:19:10.252966'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Credentials (Password & Key, Priority Mechanism)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Credentials (Password & Key, Priority Mechanism)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Credentials (Password & Key, Priority
      Mechanism)] Show interfaces with netmiko']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: [Credentials pool - Austin devices]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show interfaces
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-11-17 09:04:17.856544'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Credentials (Password & Key, Priority Mechanism)] Show interfaces with netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Credentials (Password & Key, Priority Mechanism): &id265 [220, 52]
    'Regression Workflow X: Credentials (password & key, priority)': [220, 52]
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id265
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show interfaces with netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    f721f743-3dd8-40a2-a5eb-5680a80b50da:
      alignment: left
      content: "Optional Prerequisite Use-Case : the first service will split devices\r\
        \non two different paths. The failure path will test iteration with device\r\
        \nquery + iteration values. \"Last Service\" must always run last, i.e after\r\
        \nboth the \"Dispatch\" service and the \"Post-iteration\" service.\r\nHowever,\
        \ in this use-case, the \"failure path\" is not always guaranteed\r\nto run,\
        \ as there may not be any failure. Prerequisite edges don't work,\r\nas the\
        \ \"Post-iteration\" service is only a prerequisite if there are any\r\ndevices\
        \ on the failure path."
      positions: [169, 120]
  last_modified: '2021-09-22 06:19:10.307160'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Optional Prerequisite Services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Optional Prerequisite Services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Optional Prerequisite Services] Dispatch
      Devices', '[Optional Prerequisite Services] Last Service', '[Optional Prerequisite
      Services] Failure case: device + value iteration', '[Optional Prerequisite Services]
      Post-Iteration Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington, Jackson]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 05:26:18.550097'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Prerequisite Services] Dispatch Devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Optional Prerequisite Services: &id266 [-342, 317]
    'Regression Workflow: Optional Prerequisite Services': *id266
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dispatch Devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name in (\"Washington\"\
    , \"Jackson\")\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 02:08:35.787494'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Prerequisite Services] Last Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Optional Prerequisite Services: &id267 [644, 318]
    'Regression Workflow: Optional Prerequisite Services': *id267
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Last Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["PaloAlto", "Atlanta"]'
  iteration_devices_property: name
  iteration_values: ("v1", "v2", "v3")
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 05:29:35.324665'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Prerequisite Services] Failure case: device + value iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Optional Prerequisite Services: &id268 [-214, -47]
    'Regression Workflow: Optional Prerequisite Services': *id268
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Failure case: device + value iteration'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = parent_device.name == \"Austin\"\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 02:09:11.818342'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Prerequisite Services] Post-Iteration Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Optional Prerequisite Services: &id269 [601, -27]
    'Regression Workflow: Optional Prerequisite Services': *id269
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-Iteration Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    565d2938-6b9a-46c3-97b5-02fd4fa05e0b:
      alignment: left
      content: "This workflow runs on two devices: San Diego and Dallas.\r\nIts preprocessing\
        \ field is used to define the iteration devices\r\nfor the second service,\
        \ via the following snippet:\r\ndevices = [\"Austin\", \"PaloAlto\"] if device.name\
        \ == \"Dallas\" else [\"NewYork\"]\r\nset_var(\"iteration_devices\", devices,\
        \ device=device.name)\r\nThe workflow can only run in DxD mode, as \"device\"\
        \ is not defined\r\nin the preprocessing section of the workflow in SxS mode."
      positions: [99, -120]
    9ab175e4-2b58-48da-bae1-89ea98ee75ed:
      alignment: left
      content: "Has \"iteration_devices\" hardcoded iteration devices: this variable\r\
        \nhas been set in the workflow preprocessing field.\r\nThree results are expected\
        \ (Parent Device / Iterated Device):\r\n1) San Diego / New York\r\n2) Dallas\
        \ / Austin\r\n3) Dallas / PaloAlto"
      positions: [284, 130]
    ca71af98-62bf-4aae-8aa5-ac4d8f804700:
      alignment: left
      content: "Has [\"Washington\", \"Austin\"] as hardcoded iteration devices.\r\
        \nFour results are expected with San Diego / Dallas as parent\r\ndevices,\
        \ and Washington / Austin as iterated device for\r\neach parent device."
      positions: [-152, 117]
  last_modified: '2021-09-22 06:19:10.354954'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Iteration Mechanism: Device Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: "devices = [\"Austin\", \"PaloAlto\"] if device.name == \"Dallas\"\
    \ else [\"NewYork\"]\r\nset_var(\"iteration_devices\", devices, device=device.name)"
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Iteration Mechanism: Device Iteration'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Iteration Mechanism: Device Iteration]
      Hard-coded iteration devices', '[Iteration Mechanism: Device Iteration] Iteration
      Devices from Predefined Variable']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanDiego, Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Austin"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-03 03:43:39.735814'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Device Iteration] Hard-coded iteration devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Device Iteration: [-100, 67]
    'Iteration Mechanism: Device Iteration': [-151, 24]
    'Regression Workflow: Device Iteration': [-233, 160]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Hard-coded iteration devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["PaloAlto", "Austin"]'
  iteration_devices_property: name
  iteration_values: '["D", "E"]'
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.394038'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device
    Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [233, 471]
    'Regression Workflow: Workflow and Subworkflow Iteration': [233, 471]
    Workflow and Subworkflow Iteration: [233, 471]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow Device Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Iteration Mechanism: Workflow and
      Subworkflow Iteration] Subworkflow Device Iteration] Service that does nothing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("device_iteration", device=device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.422227'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device
    Iteration 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': [628, 455]
    'Regression Workflow: Workflow and Subworkflow Iteration': [649, 409]
    Workflow and Subworkflow Iteration: [649, 409]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow Device Iteration 2
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Iteration Mechanism: Workflow and
      Subworkflow Iteration] Subworkflow Device Iteration 2] Service that does nothing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:22:49.943322'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device
    Iteration 2] Service that does nothing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id270 [
      233, -24]
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id270
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id270
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service that does nothing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:31:47.477556'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device
    Iteration] Service that does nothing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id271 [
      241, -26]
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id271
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id271
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service that does nothing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:03:50.088980'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global Variables and post-run Pool Update Mechanism] Factory function: Create
    new device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global Variables and post-run Pool Update Mechanism: [-165, 199]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      -165, 199]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Factory function: Create new device'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "new_device = factory(\"device\", name=f\"New-{device.id}\")\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = new_device.serialized"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:04:58.720648'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global Variables and post-run Pool Update Mechanism] Delete function: delete
    new device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global Variables and post-run Pool Update Mechanism: [193, 128]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': [
      182, 132]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Delete function: delete new device'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"device\", name=f\"No-{device.id}\")\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: public
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    893cb12b-1918-4e50-8aa2-a71ae7bf3e8f:
      alignment: left
      content: "Iteration targets set to \"Boston\" and \"Washington\" too.\r\nIterating\
        \ should fail for Boston as parent device, and for Washington,\r\nit should\
        \ only iterate on Washington as iteration devices and not Boston."
      positions: [583, 220]
    a310fb32-d6ca-408d-87b1-83e5f95e36ff:
      alignment: left
      content: "This workflow must be run by user \"ny\" on two devices:\r\nBoston\
        \ and Washington.\r\nny has access to Washington, but not Boston: Bostin should\r\
        \nfail without prevent the workflow from running on Washington.\r\nThe restriction\
        \ must apply to direct targets as well as\r\niteration and device targets.\r\
        \nMust be run both in DxD and SxS w/ WF targets mode."
      positions: [279, -88]
  last_modified: '2021-09-22 06:19:10.456761'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: RBAC Target Restriction
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: RBAC Target Restriction
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[RBAC Target Restriction] Direct Target',
    '[RBAC Target Restriction] Device Targets', '[RBAC Target Restriction] Iteration
      Targets']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:12.473429'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[RBAC Target Restriction] Direct Target'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    RBAC Target Restriction: &id272 [-162, 99]
    'Regression Workflow: RBAC Target Restriction': *id272
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Direct Target
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["Washington", "Boston"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:24.915967'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[RBAC Target Restriction] Device Targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    RBAC Target Restriction: &id273 [181, 119]
    'Regression Workflow: RBAC Target Restriction': *id273
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Device Targets
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Boston"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:47.352189'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[RBAC Target Restriction] Iteration Targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    RBAC Target Restriction: &id274 [590, 138]
    'Regression Workflow: RBAC Target Restriction': *id274
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Targets
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    03095192-e0e3-4e4b-837a-d62da1e2745d:
      alignment: left
      content: "Uses Netconf RPC to delete the description\r\nof interface \"Loopback\
        \ 5\"."
      positions: [509, 220]
    ae5534ad-a205-4918-9410-060a9e37be0d:
      alignment: left
      content: "Uses Netconf RPC to edit the description of interface \"Loopback 5\"\
        .\r\nDescription is set to \"YYYY\""
      positions: [29, -150]
    b4231341-9041-4ff2-9d9e-4955d16aa247:
      alignment: left
      content: "Uses Scrapli Netconf \"get config\" function to retrieve\r\nthe running\
        \ configuration.\r\nIn postprocessing, checking for \"YYYY\" to make sure\
        \ the\r\ndescription was properly configured in the previous step."
      positions: [483, -149]
    d95f1a49-b583-4bf9-91a8-94a0ed98171f:
      alignment: left
      content: "Uses Scrapli Netconf \"Get\" function with XML payload to get data\r\
        \nfrom all interfaces. The output is converted to a dictionary in step 4.\r\
        \nCheck that the interface description is not set in post-processing.\r\n"
      positions: [69, 216]
  last_modified: '2021-09-22 06:19:10.523224'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Scrapli Netconf Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Scrapli Netconf Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Scrapli Netconf Service] Get Running
      Configuration', '[Scrapli Netconf Service] Get State', '[Scrapli Netconf Service]
      Edit Interface Loopback 5', '[Scrapli Netconf Service] Delete Loopback 5 description']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  close_connection: false
  command: get_config
  commit_config: false
  completion_time: 1
  connection_name: default
  content: ''
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-05-02 03:34:31.845229'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Netconf Service] Get Running Configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Scrapli Netconf Service': &id275 [479, -63]
    Scrapli Netconf Service: *id275
  postprocessing: "results[\"success\"] = \"<description>YYYY</description>\" in results[\"\
    result\"]\r\nlog(\"error\", \"Description 'YYYY' missing from Running Configuration\"\
    )"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Running Configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  command: get
  commit_config: false
  completion_time: 1
  connection_name: default
  content: "<if:interfaces -state xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    >\r\n      <if:interface>\r\n        <if:name>Loopback5</if:name>\r\n      </if:interface>\r\
    \n</if:interfaces>"
  content_match: ''
  content_match_regex: false
  conversion_method: xml
  creator: admin
  credential_type: any
  credentials: device
  custom_password: YWRtaW4=
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 07:36:06.901673'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Netconf Service] Get State'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Scrapli Netconf Service': &id276 [26, 125]
    Scrapli Netconf Service: *id276
  postprocessing: "interfaces = results[\"result\"][\"rpc-reply\"][0][\"data\"][0][\"\
    interfaces\"][0][\"interface\"]\r\nfor interface in interfaces:\r\n    if interface[\"\
    name\"][0] == \"Loopback5\":\r\n        break\r\n\r\nresults[\"interface\"] =\
    \ interface\r\nresults[\"success\"] = interface[\"config\"][0][\"description\"\
    ] == [None]\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get State
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  command: rpc
  commit_config: true
  completion_time: 1
  connection_name: default
  content: "<nc:edit-config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\r\
    \n   <target>\r\n   <running/>\r\n   </target>\r\n   <commands>\r\n   <command>interface\
    \ Loopback5</command>\r\n   <command>description YYYY</command>\r\n   </commands>\r\
    \n   </nc:edit-config>"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:17:31.604783'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Netconf Service] Edit Interface Loopback 5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Scrapli Netconf Service': &id277 [20, -72]
    Scrapli Netconf Service: *id277
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Edit Interface Loopback 5
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  command: rpc
  commit_config: false
  completion_time: 1
  connection_name: default
  content: "<nc:edit-config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\r\
    \n   <target>\r\n   <running/>\r\n   </target>\r\n   <commands>\r\n   <command>interface\
    \ Loopback 5</command>\r\n   <command>no description YYYY</command>\r\n   </commands>\r\
    \n   </nc:edit-config>"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:12:42.356680'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Scrapli Netconf Service] Delete Loopback 5 description'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Scrapli Netconf Service': &id278 [510, 143]
    Scrapli Netconf Service: *id278
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Delete Loopback 5 description
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["Atlanta"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    19c40c2f-b0c6-4c33-b1b7-22085dcb07e3:
      alignment: left
      content: "Uses a parameterized form to define the value of an interface.\r\n\
        Services use netmiko to show the description of the interface.\r\nThe parameterized\
        \ run uses the \"tags\" property to add tags\r\nto the run object.\r\nThe\
        \ workflow has \"device query\" set to \"Atlanta\". Since the\r\ndevice query\
        \ is not part of the paramterized form, it should be\r\nconsidered when running\
        \ the workflow and Atlanta should be\r\na target."
      positions: [234, -86]
    46e3d026-f4f9-4d74-9ba9-2807c97ffe18:
      alignment: left
      content: 'Access the interface as a global variable: "interface"'
      positions: [438, 187]
    fded87ef-2b4a-4cdb-9f21-5c81981bde15:
      alignment: left
      content: "Access the interface property directly from the payload :\r\n\"payload[\"\
        form\"][\"interface\"]\"\r\n"
      positions: [-82, 204]
  last_modified: '2021-09-22 06:19:10.562672'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Parameterized Form (override tags & targets, add payload)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "target_devices = MultipleInstanceField(\"Devices\", model=\"\
    device\")\r\ntarget_pools = MultipleInstanceField(\"Pools\", model=\"pool\")\r\
    \ntags = SelectMultipleStringField(\r\n  \"Tags\",\r\n  choices=(\r\n    (\"tag1\"\
    , \"Tag 1\"),\r\n    (\"tag2\", \"Tag 2\"),\r\n    (\"precheck\", \"Pre-checks\"\
    ),\r\n    (\"postcheck\", \"Post-checks\"))\r\n)\r\ninterface = StringField(\"\
    Interface\", default=\"Lo1\")\r\n"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Parameterized Form (override tags & targets, add payload)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Parameterized Form (override tags
      & targets, add payload)] Show interface from initial form (default: Lo1)', '[Parameterized
      Form (override tags & targets, add payload)] Show inteface as global variable']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanDiego, Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show interface {{payload["form"]["interface"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-07 02:09:28.205784'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Form (override tags & targets, add payload)] Show interface
    from initial form (default: Lo1)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Parameterized Form (override tags & targets, add payload): &id279 [-78, 122]
    'Regression Workflow: Parameterized Form (override tags & targets, add payload)': *id279
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Show interface from initial form (default: Lo1)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    388cd977-3b5c-4159-a105-22c931b01eb8:
      alignment: left
      content: "A new key \"new_key\" is added to the result such that\r\nresults[\"\
        new_key\"] = {\r\n  \"a\": \"LLLoLLL\",\r\n  \"b\": {\"c\": \"JJJkJJJ\"},\r\
        \n  \"c\": [1, \"3\"]\r\n}\r\nWe test that {\"a\":\"LLLoLLL\",\"c\":[\"3\"\
        ]} is included in\r\nresults[\"new_key\"] via Dictionary Inclusion validation."
      positions: [-46, 235]
    47a0ea22-8a52-4ca6-87ae-70e0da8baea5:
      alignment: left
      content: "results[\"result\"] (default validation section) is set to\r\n{\"\
        key1\": \"value1\"} in the python section.\r\nVia the dictionary match mechanism,\
        \ we check that it is\r\nindeed equal to {\"key1\": \"value1\"}."
      positions: [-437, 207]
    508374df-69c4-40ed-87be-083eb30dd249:
      alignment: left
      content: "We set \"results[\"result\"]\" to {\"a\": {\"b\": \"LOL\"}}.\r\nWe\
        \ then check, via String Inclusion Validation,\r\nthat \"OL\" is included\
        \ in \"results['result'][\"a\"][\"b\"]\"."
      positions: [345, 208]
    82b58ac0-c894-4f7f-9b8c-1b4399c3cb2d:
      alignment: left
      content: "By default, the validation mechanism takes place on the\r\n\"result\"\
        \ key of the results (\"results['result']\"). The \"Section to Validate\"\r\
        \nfield lets you change that default behavior.\r\n* The first service uses\
        \ the default behavior of checking against\r\n\"results['result']\".\r\n*\
        \ The second service uses dictionary inclusion validation against\r\na new\
        \ top level key of the result dictionary.\r\n* The third service uses string\
        \ inclusion validation against\r\nan inner key of results['result'].\r\n"
      positions: [-86, -14]
  last_modified: '2021-09-22 06:19:10.610280'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Validation Mechanism: Section to Validate Property'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Validation Mechanism: Section to Validate Property'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Validation Mechanism: Section to
      Validate Property] Dict Equality Validation of default path', '[Validation Mechanism:
      Section to Validate Property] Dict Inclusion Validation of new key', '[Validation
      Mechanism: Section to Validate Property] Nested Result String Validation']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {key1: value1}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 02:58:21.081808'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism: Section to Validate Property] Dict Equality Validation
    of default path'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Validation Section Mechanism': [-384, 34]
    'Validation Mechanism: Section to Validate Property': [-467, 119]
    Validation Section Mechanism: [-448, 116]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Equality Validation of default path
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {\"key1\": \"value1\"}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    a: LLLoLLL
    c: ['3']
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 03:07:50.513458'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism: Section to Validate Property] Dict Inclusion Validation
    of new key'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Validation Section Mechanism': [-39, -193]
    'Validation Mechanism: Section to Validate Property': [-55, 123]
    Validation Section Mechanism: [193, 118]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Inclusion Validation of new key
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"new_key\"] = {\r\n  \"a\": \"LLLoLLL\",\r\n  \"b\"\
    : {\"c\": \"JJJkJJJ\"},\r\n  \"c\": [1, \"3\"]\r\n}\r\nresults[\"success\"] =\
    \ True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['new_key']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: OL
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 08:17:12.564512'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism: Section to Validate Property] Nested Result String
    Validation'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Validation Section Mechanism': [77, 51]
    'Validation Mechanism: Section to Validate Property': [290, 124]
    Validation Section Mechanism: [285, -48]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Nested Result String Validation
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {\"a\": {\"b\": \"LOL\"}}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']["a"]["b"]
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    25779404-589e-4a8f-8b83-7b71c7262010:
      alignment: left
      content: "Get Full Config via NCClient. Convert the Configuration to a string.\r\
        \nCheck that \"ZZZZ\" isn't in the configuration via text match validation\r\
        \nwith negative logic enabled."
      positions: [-337, 197]
    45456377-3939-4c06-8a03-1701ebb7206b:
      alignment: left
      content: "Use NCClient \"Edit Config\" Operation to set\r\nthe description of\
        \ Loopback4 to \"ZZZZ\"."
      positions: [-126, -203]
    5e734ae2-a1a9-422d-b21e-ea980e881f0a:
      alignment: left
      content: "Same as the first service, but\r\nwith negative logic disabled."
      positions: [33, 187]
  last_modified: '2021-09-22 06:19:10.659918'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: NCClient Netconf Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: NCClient Netconf Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[NCClient Netconf Service] Get Full
      Config', '[NCClient Netconf Service] Set Description of Lo4 to ZZZZ', '[NCClient
      Netconf Service] Check for ZZZZ in Config', '[NCClient Netconf Service] Erase
      Lo4 Description', '[NCClient Netconf Service] Check ZZZZ is not in Config']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  default_operation: merge
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:19:11.282891'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[NCClient Netconf Service] Get Full Config'
  nc_type: get_config
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    NCClient Netconf Service: &id280 [-414, 116]
    'Regression Workflow: NCClient Netconf Service': *id280
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Full Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  default_operation: merge
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:23:05.758222'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[NCClient Netconf Service] Set Description of Lo4 to ZZZZ'
  nc_type: push_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    NCClient Netconf Service: &id281 [-132, -139]
    'Regression Workflow: NCClient Netconf Service': *id281
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Set Description of Lo4 to ZZZZ
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: None
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: "    <nc:config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\r\n    <if:interfaces xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    \ xmlns:mmif=\"urn:metamako:params:xml:ns:yang:metamako-if\">\r\n      <if:interface>\r\
    \n        <if:name>Loopback4</if:name>\r\n        <if:config>\r\n        <if:description>ZZZZ</if:description>\r\
    \n        </if:config>\r\n      </if:interface>\r\n    </if:interfaces>\r\n  \
    \  </nc:config>"
- access_groups: admin
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  default_operation: merge
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:23:36.535509'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[NCClient Netconf Service] Check for ZZZZ in Config'
  nc_type: get_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    NCClient Netconf Service: &id282 [30, 126]
    'Regression Workflow: NCClient Netconf Service': *id282
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check for ZZZZ in Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  default_operation: merge
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:28:27.422124'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[NCClient Netconf Service] Erase Lo4 Description'
  nc_type: push_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    NCClient Netconf Service: &id283 [249, -136]
    'Regression Workflow: NCClient Netconf Service': *id283
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Erase Lo4 Description
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: None
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: "    <nc:config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\r\n    <if:interfaces xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    \ xmlns:mmif=\"urn:metamako:params:xml:ns:yang:metamako-if\">\r\n      <if:interface>\r\
    \n        <if:name>Loopback4</if:name>\r\n        <if:config>\r\n        <if:description>None</if:description>\r\
    \n        </if:config>\r\n      </if:interface>\r\n    </if:interfaces>\r\n  \
    \  </nc:config>"
- access_groups: admin
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  default_operation: merge
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:28:49.915663'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[NCClient Netconf Service] Check ZZZZ is not in Config'
  nc_type: get_config
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    NCClient Netconf Service: &id284 [388, 123]
    'Regression Workflow: NCClient Netconf Service': *id284
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check ZZZZ is not in Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    51d764cf-2275-4da7-b125-5d05fa7230ef:
      alignment: left
      content: "This service opens the default netmiko connection:\r\n\"OPENING Netmiko\
        \ Connection 'default'\""
      positions: [-18, -197]
    7135acf5-728a-4b50-8bd7-8f9dfda7032b:
      alignment: left
      content: "This service uses \"connection2\" and \"Close Connection\"\r\nis set\
        \ to True. Expected in the service logs:\r\n\"Closed netmiko connection 'connection2'\"\
        \r\n"
      positions: [462, -167]
    aaca4c8e-23fa-49d5-98ad-9be3ca696dc7:
      alignment: left
      content: "This service opens a new connection named \"connection2\".\r\nThe\
        \ logs should contain: \"OPENING Netmiko Connection 'connection2'\"\r\ndespite\
        \ the fact that \"Open New Connection\" is not set."
      positions: [-173, 190]
    d1054aca-df42-4e18-9418-f2233be28528:
      alignment: left
      content: "During the workflow, there should be two VTY open on the\r\ndevice.\r\
        \nAt the end of the workflow, the remaining \"default\" connection\r\nshould\
        \ be closed. Expected in workflow logs:\r\n\"Closed netmiko connection 'default'\"\
        ."
      positions: [374, 129]
  last_modified: '2021-09-22 06:19:10.704053'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Multiple parallel connections to same device
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Multiple parallel connections to same device
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Multiple parallel connections to
      same device] Show VRF with default connection', '[Multiple parallel connections
      to same device] Show VRF with connection connection2', '[Multiple parallel connections
      to same device] Show users with connection2 and close']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:07:09.596633'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Multiple parallel connections to same device] Show VRF with default connection'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Multiple parallel connections to same device: &id285 [-72, -122]
    'Regression Workflow: multiple parallel connections to same device': *id285
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show VRF with default connection
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: connection2
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:08:18.891441'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Multiple parallel connections to same device] Show VRF with connection connection2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Multiple parallel connections to same device: &id286 [-231, 101]
    'Regression Workflow: multiple parallel connections to same device': *id286
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show VRF with connection connection2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: true
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: connection2
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:08:37.480645'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Multiple parallel connections to same device] Show users with connection2
    and close'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Multiple parallel connections to same device: &id287 [454, -84]
    'Regression Workflow: multiple parallel connections to same device': *id287
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show users with connection2 and close
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    201f02ff-4201-4e48-ac16-a25fb877787c:
      alignment: left
      content: "For this workflow, the \"MAIL_PASSWORD\" env variable must be set\
        \ for\r\neNMS to be able to send notifications.\r\nAll services are configured\
        \ to send mail notification, as well as the workflow\r\nitself."
      positions: [49, -29]
    91b037b9-22e5-42ba-8e3e-fb7a1e24dd57:
      alignment: left
      content: "* Once per device service\r\n* Include Device Results in mail\r\n\
        * All devices including success devices\r\n* No link in summary\r\n* No reply\
        \ to address"
      positions: [14, 175]
    a5cb931b-c6f2-4729-91a6-bf6c89484240:
      alignment: left
      content: "* Run Once service\r\n* Simple mail notification\r\n* All options\
        \ left empty"
      positions: [-410, 275]
    a7b41871-93ac-4e12-8c88-c9ac2e87871f:
      alignment: left
      content: "Notification 3:\r\n* Include device results + result link in summary\r\
        \n* Reply to address set\r\n* Display only Display Failed Devices - washigton\
        \ pass so it is\r\nexcluded from the results. The others two are passing"
      positions: [410, 285]
  last_modified: '2021-09-22 06:19:10.743185'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Notifications
  negative_logic: false
  notification_header: Include device results + result link in summary
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Notifications
  send_notification: true
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Notifications] Notification 1', '[Notifications]
      Notification 2', '[Notifications] Notification 3']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:39:15.044828'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Notifications] Notification 1'
  negative_logic: false
  notification_header: "* Run Once service\r\n* Simple mail notification\r\n* All\
    \ options left empty"
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Notifications: &id288 [-422, 198]
    'Regression Workflow: Notifications': *id288
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Notification 1
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: false
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:39:04.907474'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Notifications] Notification 2'
  negative_logic: false
  notification_header: "* Once per device service\r\n* Include Device Results in mail\r\
    \n* All devices including success devices\r\n* No link in summary\r\n* No reply\
    \ to address"
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Notifications: &id289 [-26, 64]
    'Regression Workflow: Notifications': *id289
  postprocessing: results["success"] = device.name == "Washington"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Notification 2
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: false
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:45:17.379373'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Notifications] Notification 3'
  negative_logic: false
  notification_header: "Notification 3:\r\n* Include device results + result link\
    \ in summary\r\n* Reply to address set\r\n* Display only Display Failed Devices\
    \ - washigton pass so it is\r\nexcluded from the results. The others two are passing"
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Notifications: &id290 [384, 192]
    'Regression Workflow: Notifications': *id290
  postprocessing: results["success"] = device.name == "Washington"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: afourmy@enms.io
  reserved: false
  run_method: per_device
  scoped_name: Notification 3
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    078175a7-4b51-4ccf-b896-3f176212f3ed:
      alignment: left
      content: "Same as first service, but with\r\nnegative logic disabled."
      positions: [24, 143]
    1d4c6192-870d-4a22-bd34-a61abed491bb:
      alignment: left
      content: Command "delete enms_files/netmiko_file"
      positions: [197, -169]
    2392b78f-eb3a-41e3-b824-f1d446b9a4b6:
      alignment: left
      content: Duplicate of the first service
      positions: [366, 126]
    b6e20ed0-9419-4755-942d-77ba613c4370:
      alignment: left
      content: "Run command \"dir enms_files\", use negative logic to\r\nmake sure\
        \ that \"netmiko_file\" is not in the output."
      positions: [-329, 141]
  last_modified: '2021-09-22 06:19:10.797889'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Netmiko File Transfer
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Netmiko File Transfer
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Netmiko File Transfer] Check no file
      in enms_files directory', '[Netmiko File Transfer] Transfer netmiko_file', '[Netmiko
      File Transfer] Check file in directory', '[Netmiko File Transfer] Delete netmiko_file',
    '[Netmiko File Transfer] Check netmiko_file is deleted']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 04:40:21.372109'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko File Transfer] Check no file in enms_files directory'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko File Transfer: &id291 [-346, 74]
    'Regression Workflow: Netmiko File Transfer': *id291
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check no file in enms_files directory
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files/netmiko_file
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_md5: false
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  fast_cli: false
  file_system: ''
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  inline_transfer: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-05 04:44:03.619111'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko File Transfer] Transfer netmiko_file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  overwrite_file: false
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko File Transfer: &id292 [-138, -122]
    'Regression Workflow: Netmiko File Transfer': *id292
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer netmiko_file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/a.bin
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 04:44:29.075333'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko File Transfer] Check file in directory'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko File Transfer: &id293 [13, 69]
    'Regression Workflow: Netmiko File Transfer': *id293
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check file in directory
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: delete enms_files/netmiko_file
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 05:27:08.100508'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko File Transfer] Delete netmiko_file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko File Transfer: &id294 [196, -120]
    'Regression Workflow: Netmiko File Transfer': *id294
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Delete netmiko_file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 05:27:56.885680'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko File Transfer] Check netmiko_file is deleted'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko File Transfer: &id295 [358, 66]
    'Regression Workflow: Netmiko File Transfer': *id295
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check netmiko_file is deleted
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    618b2b51-3ce9-444a-b2e4-8c7e58b980bd:
      alignment: left
      content: "Service in \"run once\" mode. Uses \"get_credential\" to\r\nretrieve\
        \ a non-device credential which passwords\r\nshould evaluate to \"ip interface\
        \ brief\". Uses password\r\nwith substitution for netmiko command.\r\nService\
        \ should pass for two devices (Washington, Austin)\r\nand fail for PaloAlto\
        \ (unreachable, wrong IP)."
      positions: [21, 244]
    8347b493-1682-4d0b-b223-8353f0f8c799:
      alignment: left
      content: "This workflow checks that device and non-device credentials can be\r\
        \nretrieved with the get_credential global function.\r\nIt should be run both\
        \ with admin and non-admin users to make sure that\r\nit fails when users\
        \ don't have access to credentials.\r\nWhenever get_credential is used, the\
        \ subsequent log should be obfuscated\r\nin netmiko validation and rest services."
      positions: [154, 10]
    cf8ec96a-b1db-4627-bda8-75d6feecd29d:
      alignment: left
      content: "Uses \"get_credential\" in python snippet to get\r\ndevice credential.\r\
        \nAdd credentials to result dict for all devices.\r\nAll 3 devices should\
        \ pass."
      positions: [-341, 117]
    e977a4d0-ee1b-4daf-aea6-6ebab0695021:
      alignment: left
      content: "Uses get_credential as part of Rest Call URL.\r\nResulting should\
        \ be obfuscated in both logs and results.\r\nThe credential password should\
        \ evaluate to \"is_alive\"\r\nmaking the resulting URL valid.\r\n2 devices,\
        \ both PASS."
      positions: [457, 201]
  last_modified: '2021-09-22 06:19:10.840025'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Global get_credential Function and Log Obfuscation
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Global get_credential Function and Log Obfuscation
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Global get_credential Function and
      Log Obfuscation] Get device credential', '[Global get_credential Function and
      Log Obfuscation] Show interface via get_credential', '[Global get_credential
      Function and Log Obfuscation] Rest Call with get_credential']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-05 23:05:06.611016'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global get_credential Function and Log Obfuscation] Get device credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global get_credential Function and Log Obfuscation: &id296 [-315, 9]
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id296
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get device credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"credentials\"] = get_credential(device=device)\r\
    \nresults[\"result\"] = result\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show {{get_credential(name="Non Device Credential")["password"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-06 00:00:22.948685'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global get_credential Function and Log Obfuscation] Show interface via get_credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Global get_credential Function and Log Obfuscation: &id297 [14, 146]
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id297
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show interface via get_credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-06 01:05:00.094390'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Global get_credential Function and Log Obfuscation] Rest Call with get_credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  password: YWRtaW4=
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    Global get_credential Function and Log Obfuscation: &id298 [447, 101]
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id298
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{get_credential(name="Non Device Credential
    - 2")["password"]}}
  run_method: per_device
  scoped_name: Rest Call with get_credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    79e47a4f-96d6-42bd-8b4c-139812b9bfef:
      alignment: left
      content: "This workflows has run method set to SxS with service targets.\r\n\
        It tests that the following mechanism work properly :\r\n- run once / once\
        \ per device\r\n- skip, both global and per device with skip query"
      positions: [83, 219]
    907fa070-7150-4303-aa0b-848bacc48a68:
      alignment: left
      content: "Run on 4 devices. Austin fails (expected: 3 PASS, 1 FAIL)\r\nShould\
        \ follow both success and failure edges, because\r\nthese edges don't matter\
        \ in that mode."
      positions: [-290, 440]
    91c62455-9d20-4c77-8596-348d4f6a9f02:
      alignment: left
      content: "Run on 4 devices. Two devices are skipped based on name\r\nvia device\
        \ query: Washington, NewYork.\r\nExpected in display: 2 PASS, 2 SKIP."
      positions: [353, 439]
    c8c22a6e-8497-4293-a333-3df8e67d59cb:
      alignment: left
      content: "Set to run on pool \"All devices\" in run once mode.\r\nIncludes a\
        \ log set to \"should appear only once\".\r\nCheck in log that it does appear\
        \ only once."
      positions: [459, 100]
  last_modified: '2021-09-22 06:19:10.891068'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: SxS Service Targets with Run Once + Skip
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: SxS Service Targets with Run Once + Skip
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[SxS Service Targets with Run Once
      + Skip] Once per device', '[SxS Service Targets with Run Once + Skip] Skip Query',
    '[SxS Service Targets with Run Once + Skip] Global Skip', '[SxS Service Targets
      with Run Once + Skip] Run Once with Pool']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:49:08.620371'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[SxS Service Targets with Run Once + Skip] Once per device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id299 [-361,
      360]
    SxS Service Targets with Run Once + Skip: *id299
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Once per device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = device.name != \"Austin\"\r\nresults[\"\
    result\"] = result"
  target_devices: [Washington, Austin, PaloAlto, Chicago]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:52:11.438159'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[SxS Service Targets with Run Once + Skip] Skip Query'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id300 [267,
      355]
    SxS Service Targets with Run Once + Skip: *id300
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Query
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name in ("Washington", "NewYork")
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Dallas, SanDiego, Washington, NewYork]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:54:36.888282'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[SxS Service Targets with Run Once + Skip] Global Skip'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id301 [-201,
      121]
    SxS Service Targets with Run Once + Skip: *id301
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Global Skip
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: SxS Service Targets with Run Once + Skip': true}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:57:57.869317'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[SxS Service Targets with Run Once + Skip] Run Once with Pool'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id302 [429,
      170]
    SxS Service Targets with Run Once + Skip: *id302
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Run Once with Pool
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nlog(\"warning\", \"Should appear only ONCE\")\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: [Devices only]
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:10.948708'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Data Extraction Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Data Extraction Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Data Extraction Service] Initialize
      Variables', '[Data Extraction Service] String Extraction', '[Data Extraction
      Service] Dict Definition', '[Data Extraction Service] Dict Update', '[Data Extraction
      Service] String Replacement', '[Data Extraction Service] List Definition', '[Data
      Extraction Service] List Append', '[Data Extraction Service] List Extend', '[Data
      Extraction Service] Operation via set_var']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:13:25.555454'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Initialize Variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id303 [-521, 287]
    'Regression Workflow: Data Extraction Service': *id303
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Initialize Variables
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nset_var(\"string\", \"test\")\r\nset_var(\"string2\", \"test2\")\r\nset_var(\"\
    string3\", \"test3\")\r\nset_var(\"dict\", {\"a\": \"b\"})\r\nset_var(\"dict2\"\
    , {1: [2, 3]})\r\nset_var(\"list\", [1, \"4\"])\r\nset_var(\"list2\", [2, (\"\
    trois\",)])\r\nset_var(\"list3\", [\"5\", {\"6\"}])\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:10:39.268087'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] String Extraction'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id304 [-410, 425]
    'Regression Workflow: Data Extraction Service': *id304
  postprocessing: results["success"] = var1 == "test"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("string")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: String Extraction
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var1
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:11:13.766271'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Dict Definition'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id305 [-102, 128]
    'Regression Workflow: Data Extraction Service': *id305
  postprocessing: 'results["success"] = var2 == {"a": "b"}'
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("dict")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Definition
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var2
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:11:32.486632'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Dict Update'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: update
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id306 [-201, 416]
    'Regression Workflow: Data Extraction Service': *id306
  postprocessing: 'results["success"] = var2 == {"a": "b", 1: [2, 3]}'
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("dict2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Update
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var2
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:10:33.736633'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] String Replacement'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id307 [-307, 222]
    'Regression Workflow: Data Extraction Service': *id307
  postprocessing: results["success"] = var1 == "test2"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("string2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: String Replacement
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var1
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:14:26.174039'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Definition'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id308 [-1, 512]
    'Regression Workflow: Data Extraction Service': *id308
  postprocessing: results["success"] = var3 == [1, "4"]
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("list")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Definition
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:16:33.711176'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Append'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: append
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id309 [31, 308]
    'Regression Workflow: Data Extraction Service': *id309
  postprocessing: results["success"] = var3 == [1, "4", [2, ("trois",)]]
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("list2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Append
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:17:24.516441'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Extend'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: extend
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id310 [159, 138]
    'Regression Workflow: Data Extraction Service': *id310
  postprocessing: results["success"] = var3 == [1, "4", [2, ("trois",)], "5", {"6"}]
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  query1: get_var("list3")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Extend
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:27:45.384542'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Operation via set_var'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Data Extraction Service: &id311 [274, 366]
    'Regression Workflow: Data Extraction Service': *id311
  postprocessing: "string_validation = var1 == \"test4\"\r\ndict_validation = var2\
    \ == {\"a\": \"b\", 1: [2, 3], \"4\": 8}\r\nlist_validation = var3 == [1, \"4\"\
    , [2, (\"trois\",)], \"5\", {\"6\"}, (\"b\",), 5, \"huit\"]\r\n\r\nresults[\"\
    success\"] = string_validation and dict_validation and list_validation\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Operation via set_var
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    set_var(\"var1\", \"test4\", device=device.name)\r\nset_var(\"var2\", {\"4\":\
    \ 8}, operation=\"update\", device=device.name)\r\nset_var(\"var3\", [(\"b\",),\
    \ 5], operation=\"extend\", device=device.name)\r\nset_var(\"var3\", \"huit\"\
    , operation=\"append\", device=device.name)\r\n\r\nresult = {}\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["NewYork", "Atlanta"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    506f2796-55f8-4ddb-849c-c2229459838e:
      alignment: left
      content: "When running a superworkflow, the targets should come\r\nfrom the\
        \ workflow itself and not the from the superworkflow.\r\nWith a parameterized\
        \ run, the targets should come from the run.\r\nThe same principles should\
        \ apply when defining targets\r\nfrom the device query field."
      positions: [-122, -177]
    9b543e1d-204c-45a2-bcb2-9619959a4924:
      alignment: left
      content: "The service targets are set to:\r\n- PaloAlto, Austin for devices\
        \ field\r\n- Washington Pool\r\n- [\"NewYork\", \"Atlanta\"] for device query\
        \ field\r\n=> Should run on 5 devices without parameterized run"
      positions: [183, 77]
    cd8dd28f-bb19-4951-b208-b39a3c0f0571:
      alignment: left
      content: "The parameterized also contains a variable \"endpoint\" that\r\nis\
        \ used in the REST call service of the superworkflow, to make\r\nsure that\
        \ parameterized form variables can be accessed as\r\nglobal variable in a\
        \ superworkflow."
      positions: [374, -186]
  last_modified: '2021-09-22 06:19:10.980395'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: true
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Parameterized Superworkflow Run
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\nendpoint =\
    \ StringField('Endpoint', [InputRequired()], default=\"is_alive\")\r\ntarget_devices\
    \ = MultipleInstanceField('Devices', model='device')\r\ntarget_pools = MultipleInstanceField('Pools',\
    \ model='pool')\r\ndevice_query = StringField('Device Query', python=True, widget=TextArea(),\
    \ render_kw={'rows': 2})\r\ndevice_query_property = SelectField('Query Property\
    \ Type', choices=(('name', 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing\
    \ = BooleanField('Multiprocessing', default=False)\r\nmax_processes = IntegerField('Maximum\
    \ number of processes', default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Parameterized Superworkflow Run
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Parameterized Superworkflow Run]
      Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Superworkflow in SxS w WT with Run Once service
  target_devices: [PaloAlto, Austin]
  target_pools: [Washington]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-11 01:00:17.856199'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Superworkflow Run] Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Parameterized Superworkflow Run: &id312 [142, -32]
    'Regression Workflow: Parameterized Superworkflow Run': *id312
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3f6ef0e9-5294-4f04-afc1-187779271fe1:
      alignment: left
      content: "Called by \"Regression Workflow: Parameterized Superworkflow Run\"\
        .\r\nTests that devices configured from a parameterized run works \r\nas expected\
        \ when a workflow has a superworkflow."
      positions: [165, -41]
  last_modified: '2021-09-22 06:19:11.038876'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Superworkflow in SxS w WT with Run Once service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Superworkflow in SxS w WT with Run Once service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Superworkflow in SxS w WT with Run
      Once service] Call to is_alive, Run Once', '[Shared] Placeholder']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-30 02:04:57.739986'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Superworkflow in SxS w WT with Run Once service] Call to is_alive, Run Once'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  password: YWRtaW4=
  payload: {}
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id313 [
      -101, 129]
    Superworkflow in SxS w WT with Run Once service: *id313
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{ endpoint }}
  run_method: once
  scoped_name: Call to is_alive, Run Once
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  username: admin
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show interface {{interface}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-29 10:42:45.467689'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Form (override tags & targets, add payload)] Show inteface
    as global variable'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Parameterized Form (override tags & targets, add payload): &id314 [435, 118]
    'Regression Workflow: Parameterized Form (override tags & targets, add payload)': *id314
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Show inteface as global variable
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    5b4eb4ba-e756-4834-ac39-05d174521efe:
      alignment: left
      content: "This last command isn't supported by the use_textfsm option (there\
        \ is\r\nno associated textFSM template) so with the option enabled, netmiko\r\
        \nshould default to displaying the output as a string."
      positions: [362, 221]
    7a0fb787-f5a8-4fb7-be2b-addc0e139522:
      alignment: left
      content: "This workflow uses netmiko \"use_textfsm\" option to automatically\r\
        \nconvert the output from a string to a dictionary (structured data).\r\n\
        This only works for specific commands, when there is an associated\r\nTextFSM\
        \ template available."
      positions: [168, -111]
  last_modified: '2021-09-22 06:19:11.074794'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Netmiko TextFSM Option
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Netmiko TextFSM Option
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Netmiko TextFSM Option] show ip int
      brief', '[Netmiko TextFSM Option] show version', '[Netmiko TextFSM Option] show
      arp', '[Netmiko TextFSM Option] show lldp neighbor']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show ip int brief
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:12:09.146619'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko TextFSM Option] show ip int brief'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko TextFSM Option: &id315 [-132, -29]
    'Regression Workflow: Netmiko TextFSM Option': *id315
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: show ip int brief
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show version
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:08.282657'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko TextFSM Option] show version'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko TextFSM Option: &id316 [-28, 186]
    'Regression Workflow: Netmiko TextFSM Option': *id316
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: show version
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show arp
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:29.599494'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko TextFSM Option] show arp'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko TextFSM Option: &id317 [316, 137]
    'Regression Workflow: Netmiko TextFSM Option': *id317
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: show arp
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  auto_find_prompt: true
  close_connection: false
  command: show lldp neighbor
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:44.791787'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Netmiko TextFSM Option] show lldp neighbor'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Netmiko TextFSM Option: &id318 [269, -27]
    'Regression Workflow: Netmiko TextFSM Option': *id318
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: show lldp neighbor
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Napalm
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    8108225c-9e1a-4f57-af77-e8076c8641c9:
      alignment: left
      content: "This workflow tests :\r\n- The configuration and rollback mechanism\
        \ with Napalm\r\n- The connection cache mechanism. Both netmiko and napalm\
        \ connections\r\nmust be closed at the end of the workflow"
      positions: [-121, -29]
  last_modified: '2021-09-22 06:19:11.117707'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: VRF Creation and Deletion with Napalm
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: VRF Creation and Deletion with Napalm
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[VRF Creation and Deletion with Napalm]
      Create a VRF with NAPALM', '[VRF Creation and Deletion with Napalm] Rollback
      Configuration with NAPALM', '[VRF Creation and Deletion with Napalm] Check VRF
      is not configured with Netmiko', '[VRF Creation and Deletion with Napalm] Check
      VRF exists with Netmiko']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  action: load_merge_candidate
  close_connection: false
  completion_time: 1
  connection_name: default
  content: "vrf instance napalm\r\n"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Napalm
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: eos
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-11-18 08:25:59.346737'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[VRF Creation and Deletion with Napalm] Create a VRF with NAPALM'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id319 [-374, -164]
    VRF Creation and Deletion with Napalm: *id319
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id319
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id319
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id319
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Create a VRF with NAPALM
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: napalm_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-11-18 08:26:18.990107'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[VRF Creation and Deletion with Napalm] Rollback Configuration with NAPALM'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id320 [287, 136]
    VRF Creation and Deletion with Napalm: *id320
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id320
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id320
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id320
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Rollback Configuration with NAPALM
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_rollback_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-11-18 08:26:08.788541'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[VRF Creation and Deletion with Napalm] Check VRF exists with Netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow A: get_var, set_var, get_result': ['266', '161']
    'Regression Workflow C: Advanced multiprocessing': [123, -187]
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id321 [267, -146]
    VRF Creation and Deletion with Napalm: *id321
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id321
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id321
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id321
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check VRF exists with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  auto_find_prompt: true
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-11-18 08:26:31.713881'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[VRF Creation and Deletion with Napalm] Check VRF is not configured with
    Netmiko'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Regression Workflow: VRF Creation and Deletion with Napalm': &id322 [-348, 160]
    VRF Creation and Deletion with Napalm: *id322
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id322
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id322
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id322
    iteration_devices_workflow: ['245', '32']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check VRF is not configured with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    006272de-91a4-49e0-9b54-9cab6e6f8768:
      alignment: center
      content: "Dictionary Inclusion Validation + Variable substitution :\r\n{\"{{device.ip_address}}\"\
        :{\"prefix_length\":24}}"
      positions: [611, 218]
    187d6918-c286-42d7-a803-e97e05978f3e:
      alignment: center
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"vendor\"\
        :\"Arista\"}"
      positions: [4, -188]
    213083b1-d7f0-4638-98aa-ca097fa10603:
      alignment: left
      content: "Dictionary Equality Validation: {\"is_alive\":{\"is_alive\":true}}\r\
        \nWashington must pass, but Austin will fail (napalm timeout has\r\nbeen brought\
        \ down to 1 to not wait too long).\r\n"
      positions: [-391, -186]
    4d62e069-5dfd-4e6d-b418-8c273a750b06:
      alignment: left
      content: "This workflow is running on two target_devices: Washington (vEOS)\
        \ and Austin (dummy).\r\nIt uses NAPALM to retrieve data from a device and\
        \ the validation mechanism.\r\nTo be tested with and without multiprocessing."
      positions: [-13, 4]
    a5c335bc-dced-4512-b5bc-1149ea7eec73:
      alignment: left
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"uptime\"\
        :\"666\",\"vendor\":\"Arista\"}\r\nThis service is expected to fail, because\
        \ this uptime is different from 666."
      positions: [584, -212]
    f33d8c65-c691-4aef-ae87-6bcd20a69a11:
      alignment: center
      content: "Test the \"Negative logic\" parameter.\r\nThe validation is set to\
        \ \"Dictionary Equality\" and the match is \r\nan empty dictionary. This shouldn't\
        \ match, but the negative logic\r\nis set to True, so the resulting value\
        \ is a success."
      positions: [-79, 230]
  last_modified: '2021-09-22 06:19:11.163414'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Napalm Getters Validation
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Napalm Getters Validation
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Napalm Getters Validation] Getters
      Workflow: get facts', '[Napalm Getters Validation] Getters Workflow: MAC address',
    '[Napalm Getters Validation] Getters Workflow: get facts failed match', '[Napalm
      Getters Validation] Getters Workflow: is alive', '[Shared] Getters Workflow:
      Interface IP']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match:
    is_alive: {is_alive: true}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  getters: [is_alive]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:37:14.672735'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Napalm Getters Validation] Getters Workflow: is alive'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Napalm Getters Validation: &id323 [-405, -99]
    'Regression Workflow: Napalm Getters Validation': *id323
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id323
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id323
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id323
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id323
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: is alive'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: success
  validation_method: dict_equal
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {fqdn: localhost, vendor: Arista}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 22:20:19.161043'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Napalm Getters Validation] Getters Workflow: get facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Napalm Getters Validation: &id324 [18, -122]
    'Regression Workflow: Napalm Getters Validation': *id324
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id324
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id324
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id324
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id324
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: get facts'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  getters: [get_mac_address_table]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 23:40:55.348647'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Napalm Getters Validation] Getters Workflow: MAC address'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Napalm Getters Validation: &id325 [-45, 144]
    'Regression Workflow: Napalm Getters Validation': *id325
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id325
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id325
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id325
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id325
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: MAC address'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: success
  validation_method: dict_equal
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {fqdn: localhost, uptime: '666', vendor: Arista}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: eos
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:40:41.939110'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Napalm Getters Validation] Getters Workflow: get facts failed match'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Napalm Getters Validation: &id326 [535, -147]
    'Regression Workflow: Napalm Getters Validation': *id326
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id326
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id326
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id326
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id326
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: get facts failed match'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Test the payload extraction and validation mechanisms
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0593f20c-240e-4846-b37e-c03bd4630516:
      alignment: left
      content: "After this service, we no longer use the netmiko connection,\r\nso\
        \ we set \"Close connection\" to true for that service.\r\nCheck that when\
        \ running the service, the connection is indeed\r\nclosed after that service.\r\
        \nThe service is configured with notification enabled, to test service\r\n\
        notification INSIDE a workflow."
      positions: [-352, -81]
    20a6a733-4b79-4390-bf2b-ad05dbd6855f:
      alignment: center
      content: "Validate the result with the regex :\r\n(\\d\\.){3}\\d"
      positions: [-51, 365]
    3844a73f-340f-4b7a-9893-50c5b79998d9:
      alignment: center
      content: "Check that the \"textfsm_variable\" in the payload\r\ncan be matched\
        \ with the \"(\\d\\.){3}\\d\" regular expression."
      positions: [794, 255]
    52d15bff-498b-462d-843c-a23199073858:
      alignment: center
      content: "Check that the results contains the dictionary\r\n{\"value\":[\"1.1.1.1\"\
        ,\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [-351, 32]
    55b1e05d-4d84-4227-8774-65cf7ffd992f:
      alignment: center
      content: "Check that the \"regex_variable\" variable\r\nin the payload contains\
        \ the dictionary\r\n{\"value\":[\"1.1.1.1\",\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [480, -121]
    cf55f702-da90-466f-9ee6-9e207a0b4808:
      alignment: left
      content: "This workflow uses netmiko to run a \"show ip route\", and a \"Payload\
        \ Extraction\" service to\r\nextract data with regular expression and TextFSM.\r\
        \nThat extracted information is stored both in the workflow payload and the\
        \ results of the extraction\r\nservice :\r\n- the left side of the workflow\
        \ uses the \"get_result\" method to retrieve the results and validate them.\r\
        \n- the right side uses \"get_var\" to extract data from the payload and validate\
        \ it.\r\nThis workflow is also used to test the RESTART mechanism. It must\
        \ be restarted from both\r\nthe left side (validate via result) and the right\
        \ side (validate via payload) to check that\r\nan older payload / result can\
        \ be retrieved from the database."
      positions: [306, 116]
  last_modified: '2021-09-22 06:19:11.219558'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Payload Extraction & Validation
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction & Validation
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Payload Extraction & Validation]
      Payload Extraction', '[Payload Extraction & Validation] Validation dict via
      results', '[Payload Extraction & Validation] Validate dict via payload', '[Payload
      Extraction & Validation] Validate text via payload', '[Payload Extraction &
      Validation] Validate text via results', '[Payload Extraction & Validation] netmiko_show_ip_route']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  auto_find_prompt: true
  close_connection: true
  command: show ip route
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_access: creator
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Show IP route
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-10-10 13:42:39.673781'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] netmiko_show_ip_route'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [-18, -145]
    'Regression Workflow: Payload Extraction & Validation': &id327 [49, -207]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id327
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id327
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id327
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id327
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_show_ip_route
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_validation_service
  update_pools_after_running: false
  update_target_pools: false
  use_device_driver: true
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: Payload Variables Extraction with Regex/TextFSM
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-06 01:33:43.013667'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: (\d.*)/32
  match3: "Value Filldown PROTOCOL (\\S+\\s\\S+?|\\w?)\r\nValue Filldown NETWORK (\\\
    d+.\\d+.\\d+.\\d+)\r\nValue Filldown MASK (\\d+)\r\nValue DISTANCE (\\d+)\r\n\
    Value METRIC (\\d+)\r\nValue DIRECT (directly)\r\nValue Required NEXT_HOP (connected|\\\
    d+\\.\\d+\\.\\d+\\.\\d+)\r\nValue INTERFACE (\\S+)\r\n\r\nStart\r\n  ^\\s+${PROTOCOL}\\\
    s+${NETWORK}/${MASK}\\s+(?:\\[${DISTANCE}/${METRIC}\\]|is\\s+${DIRECT})(?:.+?)${NEXT_HOP},\\\
    s+${INTERFACE}$$ -> Next.Record"
  match_type1: none
  match_type2: regex
  match_type3: textfsm
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction & Validation] Payload Extraction'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [-19, -26]
    'Regression Workflow: Payload Extraction & Validation': &id328 [130, -95]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id328
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id328
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id328
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id328
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  query1: get_result("netmiko_show_ip_route", device.name)["success"]
  query2: get_result("netmiko_show_ip_route", device.name)["result"]
  query3: get_result("netmiko_show_ip_route", device=device.name)["result"]
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: simple_variable
  variable2: regex_variable
  variable3: textfsm_variable
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 10:36:54.411888'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validation dict via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [-362, 111]
    'Regression Workflow: Payload Extraction & Validation': &id329 [-338, -9]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id329
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id329
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id329
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id329
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation dict via results
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(\"Payload Extraction\", device.name)[\"result\"][\"regex_variable\"\
    ]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 06:56:21.199478'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate text via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [-124, 296]
    'Regression Workflow: Payload Extraction & Validation': &id330 [-236, 214]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id330
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id330
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id330
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id330
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate text via results
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(\"Payload Extraction\", device.name)[\"result\"][\"textfsm_variable\"\
    ][\"value\"][0][1]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 10:40:12.634239'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate dict via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [451, -43]
    'Regression Workflow: Payload Extraction & Validation': &id331 [679, -114]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id331
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id331
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id331
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id331
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate dict via payload
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = {\"value\": get_var(\"regex_variable\", device=device.name)}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 06:57:42.629334'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate text via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction & Validation: [808, 157]
    'Regression Workflow: Payload Extraction & Validation': &id332 [808, 157]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id332
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id332
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id332
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id332
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate text via payload
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"textfsm_variable\", device=device.name)[0][1]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:11.271984'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Payload Extraction with Operations
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction with Operations
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Getters Workflow: Interface
      IP', '[Payload Extraction with Operations] Payload Workflow: Add initial variables',
    '[Payload Extraction with Operations] Payload Workflow: Extraction 1', '[Payload
      Extraction with Operations] Payload Workflow: Extraction 2', '[Payload Extraction
      with Operations] Validation 1', '[Payload Extraction with Operations] Validation
      2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:49.512906'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Add initial variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction with Operations: &id333 [118, -243]
    'Regression Workflow: Payload Extraction with Operations': *id333
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id333
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id333
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id333
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id333
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Add initial variables'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"list\", [1, 2], device=device.name)\r\nset_var(\"dict\"\
    , {\"a\": [\"o\", True, 4]}, device=device.name)\r\nsave_result(success=True,\
    \ result={})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:55.692116'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Extraction 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: append
  operation3: update
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction with Operations: &id334 [619, -236]
    'Regression Workflow: Payload Extraction with Operations': *id334
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id334
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id334
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id334
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id334
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  query1: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query2: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query3: 'get_result("Getters Workflow: Interface IP", device=device.name)["match"]'
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Extraction 1'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: boolean
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:57:00.505853'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Extraction 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: append
  operation2: extend
  operation3: update
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction with Operations: &id335 [600, 70]
    'Regression Workflow: Payload Extraction with Operations': *id335
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id335
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id335
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id335
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id335
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  query1: get_result("Start")["state"]["completed"]
  query2: get_result("Start")["logs"]
  query3: get_result("Start")["state"]
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Extraction 2'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_extraction_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: list
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: \[1,2,False,1.*\]
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: true
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 07:00:40.345141'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction with Operations] Validation 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction with Operations: &id336 [5, 75]
    'Regression Workflow: Payload Extraction with Operations': *id336
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id336
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id336
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id336
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id336
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"list\", device=device.name)"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  completion_time: 1
  content_match: '{"a": ["o", True, 4], "prefix_length": 24, "failed": 0}'
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 07:01:27.192118'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction with Operations] Validation 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Payload Extraction with Operations: &id337 [-461, 60]
    'Regression Workflow: Payload Extraction with Operations': *id337
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id337
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id337
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id337
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id337
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"dict\", device=device.name)"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-09-22 06:19:11.388735'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Restart Mechanism, payload + results recursive conservation
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Restart Mechanism, payload + results recursive conservation
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Restart Mechanism, payload + results
      recursive conservation] Set Payload and Result', '[Restart Mechanism, payload
      + results recursive conservation] Get Payload 1', '[Restart Mechanism, payload
      + results recursive conservation] Get Payload 2', '[Restart Mechanism, payload
      + results recursive conservation] Get Result 1', '[Restart Mechanism, payload
      + results recursive conservation] Get Result 2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  workflow_category: Example workflow(s)
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:26.423950'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Restart Mechanism, payload + results recursive conservation] Set Payload
    and Result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Restart Mechanism, payload + results recursive conservation: [-255, 25]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Set Payload and Result
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\nset_var(\"var1\", True)\r\nset_var(\"var2\", True)\r\n\r\nresult\
    \ = {\"result1\": True, \"result2\": True}\r\nresults[\"success\"] = True\r\n\
    results[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:39.468365'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Restart Mechanism, payload + results recursive conservation] Get Payload
    1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Restart Mechanism, payload + results recursive conservation: [36, -178]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Payload 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = var1\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:55.979734'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Restart Mechanism, payload + results recursive conservation] Get Payload
    2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Restart Mechanism, payload + results recursive conservation: [394, -170]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Payload 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = var2\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:56:09.506269'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Restart Mechanism, payload + results recursive conservation] Get Result
    1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Restart Mechanism, payload + results recursive conservation: [77, 130]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Result 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = get_result(\"Set Payload\
    \ and Result\")[\"result\"][\"result1\"]\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:56:29.243853'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Restart Mechanism, payload + results recursive conservation] Get Result
    2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    Restart Mechanism, payload + results recursive conservation: [410, 129]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Result 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = get_result(\"Set Payload\
    \ and Result\")[\"result\"][\"result2\"]\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_access: creator
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: iteration_devices
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-21 05:52:57.359508'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Iteration Mechanism: Device Iteration] Iteration Devices from Predefined
    Variable'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: ['All devices, links, services and users']
  positions:
    'Iteration Mechanism: Device Iteration': [245, 25]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 1
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Devices from Predefined Variable
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
